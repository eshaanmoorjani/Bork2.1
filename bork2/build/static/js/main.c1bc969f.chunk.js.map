{"version":3,"sources":["pig_logo/pig_logo.png","serviceWorker.js","services/firebase.js","pages/LoginFirebase.js","pages/LoginV2.js","pages/ChatV2.js","pages/Loading.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","firebase","require","initializeApp","apiKey","authDomain","projectId","databaseURL","auth","db","firestore","rt_db","database","functions","setTransitions","transition","document","getElementById","jlb","jdb","joinLobbyTransition","clb","cdb","createLobbyTransition","removeTransitions","sqb","parentNode","replaceChild","cloneNode","removeLoginButtonTransition","removeJoinLobbyTransition","removeCreateLobbyTransition","button","signInType","addEventListener","a","username_box","username","value","inputChatID","getInputChatID","renderLoading","signIn","httpsCallable","chatID","obj","data","console","log","usernameError","createLobbyError","joinLobbyError","renderLogin","usernameErrorMessage","createLobbyErrorMessage","joinLobbyErrorMessage","renderChat","throttle","onClick","func","timeFrame","lastTime","now","Date","joinLobbyInput","createLobbyInput","App","props","class","this","loginFrame","Component","Form","description","id","FormGrid","styles","soloStyle","fontSize","background","color","createStyle","height","width","borderWidth","borderColor","joinStyle","textFieldStyle","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","buttonStyle","formGrid","Grid","container","TextField","variant","error","label","helperText","usernameHelperText","fullWidth","autoComplete","InputLabelProps","style","InputProps","inputProps","textAlign","Button","className","size","item","createLobbyButtonSet","joinLobbyButtonSet","onMouseEnter","displayChange","onMouseLeave","createLobbyDropdown","joinLobbyDropdown","hidden","type","createLobbyHelperText","joinLobbyHelperText","idFrom","idTo","div","setAttribute","HogPub","hogPubHeader","comingSoon","logo","src","Logo","alt","LobbyApp","state","userID","currentUser","uid","lobbyType","lobbyOpen","participants","numParticipants","getChatIDInit","bind","then","setLobbySettings","handleLogout","getParticipants","handleLobbyStatusChange","changeConnectionStatus","chatListener","getChatID","addAllListeners","lobbyID","initTime","ref","videoCallURL","prevProps","prevState","collection","doc","get","user","setState","chat_id","onSnapshot","exists","orderBy","forEach","user_id","num_participants","lobby_open","lobby_type","chat","set","onDisconnect","changeLobbyStatus","result","refs","videoFrame","disconnect","deleteInfo","userId","chatId","catch","signOut","HeaderFrame","AppBar","position","getLobbyButtonMessage","LobbyFrame","showLobbyID","showLobbyCapacity","showParticipants","menuOpen","anchorEl","handleLobbyCapacityClick","handleLobbyIDClick","handleParticipantsClick","misc","lobbyFrameButton","lobbyIDText","simpleMenu","lobbyCapacityText","makeParticipants","text","clickHandler","marginLeft","marginRight","outline","boxShadow","handleClose","Fragment","event","currentTarget","Menu","keepMounted","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","key","push","MenuItem","ChatFrame","numMessagesSent","numMessagesReceived","messages","lastMessageTime","Math","floor","getTime","messageHelperText","handleSendMessage","sendMessage","makeMessageBubble","getMessages","sendMessageBox","scrollDiv","scrollIntoView","behavior","makeMessages","messageID","messageData","messageClass","timeFormatted","date","toTimeString","substr","hour","getFormattedTime","timestamp","seconds","content","makeRealMessage","makeStatusMessage","onSubmit","limit","preventDefault","inputForm","message","send","curState","messageNumber","verified","VideoFrame","callFrame","joinCall","makeCallFrame","joinButton","addDisconnectListener","addListeners","join","url","cssYesVideo","iframeStyle","left","top","showLeaveButton","showFullscreenButton","userName","DailyIframe","createFrame","on","destroy","cssNoVideo","leave","chatFrame","Loading","ReactDOM","render","setPersistence","Auth","Persistence","SESSION","signInAnonymously","renderPageWithUserID","userInfo","onAuthStateChanged","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c1bc969f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pig_logo.d0d99a55.png\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export const firebase = require('firebase');\r\nconst config = {\r\n    apiKey: \"AIzaSyBriNz3DFDo1ra0CmHC0_ZpoCYnonSWOoo\",\r\n    authDomain: \"bork-cc.firebaseapp.com\",\r\n    projectId: \"bork-cc\",\r\n    databaseURL: \"https://bork-cc.firebaseio.com\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nexport const auth = firebase.auth();\r\nexport const db = firebase.firestore();\r\nexport const rt_db = firebase.database()\r\nexport const functions = firebase.functions()\r\n// firebase.database();","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { renderLogin, renderChat, renderLoading } from './../index';\r\n\r\nimport { auth, functions } from '../services/firebase';\r\n\r\nfunction loginButtonTransition() {\r\n    const sqb = document.getElementById('solo-queue-button');\r\n    transition(sqb, \"soloQueue\");\r\n}\r\n\r\nfunction joinLobbyTransition() {\r\n    const jlb = document.getElementById(\"join-lobby-button\");\r\n    const jdb = document.getElementById(\"join-input-button\");\r\n    transition(jlb, \"joinLobby\");\r\n    transition(jdb, \"joinLobby\");\r\n}\r\n\r\nfunction createLobbyTransition() {\r\n    const clb = document.getElementById(\"create-lobby-button\");\r\n    const cdb = document.getElementById(\"create-input-button\");\r\n    transition(clb, \"createLobby\");\r\n    transition(cdb, \"createLobby\");\r\n}\r\n\r\nfunction removeLoginButtonTransition() {\r\n    const sqb = document.getElementById('solo-queue-button');\r\n    sqb.parentNode.replaceChild(sqb.cloneNode(true), sqb);\r\n}\r\n\r\nfunction removeJoinLobbyTransition() {\r\n    const jlb = document.getElementById(\"join-lobby-button\");\r\n    const jdb = document.getElementById(\"join-input-button\");\r\n    jlb.parentNode.replaceChild(jlb.cloneNode(true), jlb);\r\n    jdb.parentNode.replaceChild(jdb.cloneNode(true), jdb);\r\n}\r\n\r\nfunction removeCreateLobbyTransition() {\r\n    const clb = document.getElementById(\"create-lobby-button\");\r\n    const cdb = document.getElementById(\"create-input-button\");\r\n    clb.parentNode.replaceChild(clb.cloneNode(true), clb);\r\n    cdb.parentNode.replaceChild(cdb.cloneNode(true), cdb);\r\n}\r\n\r\nexport function setTransitions() {\r\n    loginButtonTransition();\r\n    joinLobbyTransition();\r\n    createLobbyTransition();\r\n}\r\n\r\nexport function removeTransitions() {\r\n    removeLoginButtonTransition();\r\n    removeJoinLobbyTransition();\r\n    removeCreateLobbyTransition();\r\n}\r\n\r\n/**\r\n * Retrive username, inputted chatID from input boxes in the login page.\r\n * \r\n * Call server's sign in function.\r\n * \r\n * If it works, render the chat page.\r\n * If it doesn't re-render the login page with the correct error message\r\n * \r\n * @param {html button} button \r\n * @param {string} signInType \r\n * @returns {null}\r\n * \r\n */\r\nfunction transition(button, signInType) {\r\n    button.addEventListener('click', onClick(signInType));\r\n}\r\n\r\nfunction onClick(signInType) {\r\n    async function handleClick() {\r\n        const username_box = document.getElementById(\"username-textfield\");\r\n        const username = username_box.value;\r\n        const inputChatID = getInputChatID(signInType);\r\n    \r\n        renderLoading();\r\n\r\n        const signIn = functions.httpsCallable('signIn');\r\n        const obj = await signIn({username: username, chatID: inputChatID, signInType: signInType});\r\n    \r\n        const data = obj.data;\r\n        console.log(data);\r\n        if (data.usernameError || data.createLobbyError || data.joinLobbyError) {\r\n            renderLogin(data.usernameError, data.usernameErrorMessage, data.createLobbyError, data.createLobbyErrorMessage, data.joinLobbyError, data.joinLobbyErrorMessage);\r\n            removeTransitions();\r\n            setTransitions();\r\n        } else {\r\n            renderChat(data.chatID, data.username);\r\n        }\r\n    }\r\n    return throttle(handleClick, 2000);\r\n}\r\n\r\nexport function throttle(func, timeFrame) {\r\n    var lastTime = 0;\r\n    return function () {\r\n        var now = new Date();\r\n        if (now - lastTime >= timeFrame) {\r\n            func();\r\n            lastTime = now;\r\n        } else {\r\n            console.log(\"waiting\");\r\n        }\r\n    };\r\n  }\r\n\r\n/**\r\n * Retrieves the user-inputted chatID from the input boxes, given their signInType.\r\n * \r\n * @param {string} signInType \r\n * @returns {string} chatID\r\n * \r\n */\r\nfunction getInputChatID(signInType) {\r\n    const joinLobbyInput = document.getElementById(\"join-lobby-input\");\r\n    const createLobbyInput = document.getElementById(\"create-lobby-input\");\r\n    if (signInType === \"joinLobby\") {\r\n        return joinLobbyInput.value;\r\n    } else if (signInType === \"createLobby\") {\r\n        return createLobbyInput.value;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport './LoginV2.css';\r\nimport { joinLobbyTransition } from './LoginFirebase';\r\nimport Logo from './../pig_logo/pig_logo.png';\r\n\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"full-frame-login\">\r\n        {this.loginFrame()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  loginFrame() {\r\n    return (\r\n      <div class=\"login-frame\">\r\n        <Form {...this.props}></Form>\r\n        <HogPub></HogPub>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"form-frame\">\r\n        {this.description()}\r\n        <FormGrid {...this.props}></FormGrid>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  description() {\r\n    return (\r\n      <div class=\"descriptions\">\r\n        <h2 class=\"main-description\">\r\n          Enter Among Us Lobbies!\r\n        </h2>\r\n        <h3 class=\"sub-description\">\r\n          <p id=\"username-warning\"></p>\r\n        </h3>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nclass FormGrid extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.styles = importStyles();\r\n  }\r\n\r\n  render() {\r\n    return this.formGrid();\r\n  }\r\n\r\n  \r\n\r\n  formGrid() {\r\n    return (\r\n      <Grid container class=\"container\">\r\n          <TextField class=\"username-textfield\" id=\"username-textfield\" variant=\"outlined\" error={this.props.usernameError}\r\n          label=\"Username\" helperText={this.props.usernameHelperText} fullWidth={true} autoComplete=\"off\"\r\n          InputLabelProps={{style: {fontSize: 25}}}\r\n          InputProps={{style: {height: 65, fontSize: 25}}}\r\n          inputProps={{style: {fontSize: 40, textAlign: \"center\"}}}>\r\n          </TextField>\r\n\r\n          <Button className=\"solo-queue-button\" id=\"solo-queue-button\" variant=\"contained\" color=\"primary\" size=\"large\" fullWidth={true}\r\n           style={this.styles.soloStyle} >Solo Queue</Button>\r\n\r\n          <Grid item class=\"buttons\">\r\n            {this.createLobbyButtonSet()}\r\n            {this.joinLobbyButtonSet()}\r\n          </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n\r\n  createLobbyButtonSet() {\r\n    return (\r\n      <div id=\"create-lobby-box\" onMouseEnter={this.displayChange(\"create-invis\", \"create-show\")} onMouseLeave={this.displayChange(\"create-show\", \"create-invis\")} >\r\n        <Button id=\"create-lobby-button\" variant=\"outlined\" color=\"primary\" size=\"large\" fullWidth={true} style={this.styles.createStyle}>Create Lobby</Button>\r\n        {this.createLobbyDropdown()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  joinLobbyButtonSet() {\r\n    return (\r\n      <div id=\"join-lobby-box\"\r\n       onMouseEnter={this.displayChange(\"join-invis\", \"join-show\")} onMouseLeave={this.displayChange(\"join-show\", \"join-invis\")} >\r\n          <Button id=\"join-lobby-button\" variant=\"outlined\" color=\"primary\" size=\"large\" fullWidth={true} style={this.styles.joinStyle} >Join Lobby</Button>\r\n          {this.joinLobbyDropdown()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  createLobbyDropdown() {\r\n    return (\r\n      <div class=\"create-lobby-div\" id=\"create-invis\">\r\n        <TextField className=\"create-lobby-input\" hidden={true} id=\"create-lobby-input\" variant=\"outlined\" type=\"text\" autoComplete=\"off\"\r\n          label=\"Enter Lobby ID\" error={this.props.createLobbyError} helperText={this.props.createLobbyHelperText} \r\n          InputProps={{style: this.styles.textFieldStyle}} >\r\n         </TextField>\r\n        <Button id=\"create-input-button\" variant=\"contained\" color=\"primary\" style={this.styles.buttonStyle}>\r\n          <p class=\"create-input-text\">Create!</p>\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  joinLobbyDropdown() {\r\n    return (\r\n      <div class=\"join-lobby-div\" id=\"join-invis\">\r\n        <TextField className=\"join-lobby-input\" hidden={true} id=\"join-lobby-input\" variant=\"outlined\" type=\"text\" autoComplete=\"off\"\r\n          label=\"Enter Lobby ID\" error={this.props.joinLobbyError} helperText={this.props.joinLobbyHelperText} \r\n          InputProps={{style: this.styles.textFieldStyle}} >\r\n         </TextField>\r\n        <Button id=\"join-input-button\" variant=\"contained\" color=\"primary\" style={this.styles.buttonStyle}>\r\n          <p class=\"join-input-text\">Join!</p>\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  displayChange(idFrom, idTo) {\r\n    function helper() {\r\n      const div = document.getElementById(idFrom);\r\n      /* If someone is already hovering on the button when a re-render occurs, the idFrom will be opposite. Just do nothing in this case */\r\n      if (div === null) {\r\n        return;\r\n      }\r\n      div.setAttribute(\"id\", idTo);\r\n    }\r\n    return helper\r\n  }\r\n}\r\n\r\nclass HogPub extends Component {\r\n  render() {\r\n    return (\r\n      <div class=\"hog-pub-frame\">\r\n        {this.hogPubHeader()}\r\n        {this.comingSoon()}\r\n        {this.logo()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  hogPubHeader() {\r\n    return (\r\n      <h1 class=\"header\">Hog Pub</h1>\r\n    )\r\n  }\r\n\r\n  comingSoon() {\r\n    return (\r\n      <h3 class=\"coming-soon\">Other games coming soon!</h3>\r\n    );\r\n  }\r\n\r\n  logo() {\r\n    return (\r\n      <img class=\"logo\" src={Logo} alt=\"logo\"/>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nfunction importStyles() {\r\n  return {\r\n    soloStyle: {\r\n      fontSize: 20,\r\n\r\n      background: 'linear-gradient(45deg, #2196F3 5%, #21CBF3 90%)',\r\n      color: 'white',\r\n    },\r\n\r\n    createStyle: {\r\n      height: '100%',\r\n      width: '100%',\r\n\r\n      borderWidth: 1.2,\r\n      borderColor: '#21CBF3',\r\n      \r\n      fontSize: 20,\r\n\r\n      color: '#21CBF3',\r\n    },\r\n\r\n    joinStyle: {\r\n      height: '100%',\r\n      width: '100%',\r\n\r\n      borderWidth: 1.2,\r\n      borderColor: '#21CBF3',\r\n      \r\n      fontSize: 20,\r\n\r\n      color: '#21CBF3',\r\n    },\r\n\r\n    textFieldStyle: {\r\n      borderTopRightRadius: '0px',\r\n      borderBottomRightRadius: '0px',\r\n      borderTopLeftRadius: '20px',\r\n      borderBottomLeftRadius: '20px',\r\n    },\r\n\r\n    buttonStyle: {\r\n      height: '100%',\r\n      width: '30%',\r\n\r\n      borderTopRightRadius: '20px',\r\n      borderBottomRightRadius: '20px',\r\n      borderTopLeftRadius: '0px',\r\n      borderBottomLeftRadius: '0px',\r\n\r\n      background: '#21CBF3',\r\n      color: 'white',\r\n    },\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport DailyIframe from '@daily-co/daily-js';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport { auth, db, rt_db, functions } from '../services/firebase';\r\n\r\nimport './ChatV2.css';\r\nimport { throttle } from './LoginFirebase';\r\nimport { renderLoading } from './../index';\r\n\r\n\r\nexport default class LobbyApp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chatID: null,\r\n            userID: auth.currentUser.uid,\r\n            \r\n            lobbyType: null,\r\n            lobbyOpen: null,\r\n\r\n            participants: {},\r\n            numParticipants: 0,\r\n        };\r\n\r\n        this.getChatIDInit = this.getChatIDInit.bind(this);\r\n        this.getChatIDInit().then(() => {\r\n            this.setLobbySettings();\r\n\r\n            this.handleLogout = this.handleLogout.bind(this);\r\n    \r\n            this.getParticipants = this.getParticipants.bind(this);\r\n            this.handleLobbyStatusChange = this.handleLobbyStatusChange.bind(this);\r\n            this.changeConnectionStatus = this.changeConnectionStatus.bind(this);\r\n            this.chatListener = this.chatListener.bind(this);\r\n            this.getChatID = this.getChatID.bind(this);\r\n            this.addAllListeners = this.addAllListeners.bind(this);\r\n    \r\n            this.addAllListeners();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.chatID === null) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div class=\"page\">\r\n                    <div class=\"full-frame-chat\">\r\n                        <LobbyFrame lobbyID={this.state.chatID} lobbyType={this.state.lobbyType} lobbyOpen={this.state.lobbyOpen}\r\n                        numParticipants={this.state.numParticipants} participants={this.state.participants}/>\r\n\r\n                        <ChatFrame chatID={this.state.chatID} userID={this.state.userID} username={this.props.username} initTime={new Date()}/>\r\n\r\n                        <VideoFrame ref=\"videoFrame\" videoCallURL={`https://hogpub.daily.co/${this.state.chatID}`} username={this.props.username} />\r\n                    </div>\r\n\r\n                    <HeaderFrame handleLogout={throttle(this.handleLogout, 10000)} handleLobbyStatusChange={this.handleLobbyStatusChange}\r\n                     lobbyType={this.state.lobbyType} lobbyOpen={this.state.lobbyOpen}></HeaderFrame>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /* Redirect listeners after chatID has changed */\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.chatID !== this.state.chatID) {\r\n            this.addAllListeners();\r\n        }\r\n    }\r\n\r\n    addAllListeners() {\r\n        this.getChatID();\r\n        this.getParticipants();\r\n        this.changeConnectionStatus();\r\n        this.chatListener();\r\n    }\r\n\r\n    async getChatIDInit() {\r\n        await db.collection(\"users\").doc(this.state.userID).get().then(user => {\r\n            this.setState({\r\n                chatID: user.data().chat_id,\r\n            });\r\n        });\r\n    }\r\n\r\n    getChatID() {\r\n        const ref = db.collection(\"users\").doc(this.state.userID);\r\n        ref.onSnapshot(doc => {\r\n            if (!doc.exists) {\r\n                return null;\r\n            }\r\n            const chatID = doc.data().chat_id; \r\n            this.setState({\r\n                chatID: chatID,\r\n            });\r\n        });\r\n    }\r\n\r\n    getParticipants() {\r\n        const ref = db.collection(\"chats\").doc(this.state.chatID)\r\n        ref.collection(\"participants\").orderBy(\"timestamp\").onSnapshot(collection => {\r\n            var participants = {};\r\n\r\n            collection.forEach(doc => {\r\n                const data = doc.data();\r\n                participants[data.user_id] = data.username;\r\n            });\r\n\r\n            this.setState({\r\n                participants: participants,\r\n            });\r\n        });\r\n    }\r\n\r\n    chatListener() {\r\n        const ref = db.collection(\"chats\").doc(this.state.chatID)\r\n        ref.onSnapshot(doc => {\r\n            if (!doc.exists) {\r\n                return null;\r\n            }\r\n            const numParticipants = doc.data().num_participants;\r\n            const lobbyOpen = doc.data().lobby_open;\r\n            const lobbyType = doc.data().lobby_type;\r\n            this.setState({\r\n                numParticipants: numParticipants,\r\n                lobbyOpen: lobbyOpen,\r\n                lobbyType: lobbyType,\r\n            });\r\n        });\r\n    }\r\n\r\n    async setLobbySettings() {\r\n        const chat = await db.collection(\"chats\").doc(this.state.chatID).get();\r\n        this.setState({\r\n            lobbyOpen: chat.data().lobby_open,\r\n            lobbyType: chat.data().lobby_type,\r\n        });\r\n    }\r\n\r\n    changeConnectionStatus() {\r\n        rt_db.ref('users/' + this.state.userID + \"/is_disconnected\").set(false); \r\n        var presenceRef = rt_db.ref(\"users/\" + this.state.userID + \"/is_disconnected\");     \r\n        presenceRef.onDisconnect().set(true);\r\n    }\r\n\r\n    handleLobbyStatusChange() {\r\n        const changeLobbyStatus = functions.httpsCallable('changeLobbyStatus')\r\n        const status = changeLobbyStatus({}).then(result => {\r\n            console.log(result.data)\r\n        // if(result.data \r\n        //     else {\r\n        //         this.setState({\r\n        //             lobbyOpen: result.data.lobby_open,\r\n        //         });\r\n        //     }\r\n        })\r\n    }\r\n\r\n    // this deletes from local participants, need to delete from DATABASE\r\n    async handleLogout() {\r\n        // disconnect from the video call using the VideoFrame class's method\r\n        if (this.refs.videoFrame || null !== null) {\r\n            this.refs.videoFrame.disconnect();\r\n        } \r\n        renderLoading();\r\n        const deleteInfo = functions.httpsCallable('deleteUserInfo');\r\n        \r\n        await deleteInfo({userId: this.state.userID, chatId: this.state.chatID, username: this.props.username}).then(result => { // CORS error that wasn't there earlier\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n        auth.signOut()\r\n    }\r\n\r\n}\r\n\r\nclass HeaderFrame extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const buttonStyle2 = {\r\n            background: '#2196F3',\r\n            color: 'white',\r\n        };\r\n\r\n        const buttonStyle3 = {\r\n            height: '80%',\r\n            color: 'white',\r\n        };\r\n        \r\n        return (\r\n            <AppBar className=\"appbar\" position=\"sticky\">\r\n                <div className=\"toolbar\">\r\n                        <Button className=\"leave-lobby-temp\" variant=\"contained\" color=\"secondary\"\r\n                         onClick={this.props.handleLogout}>Leave Lobby</Button>\r\n                        <Button className=\"start-queue-temp\" variant=\"contained\" color=\"primary\" style={buttonStyle2}\r\n                         onClick={this.props.handleLobbyStatusChange}>{this.getLobbyButtonMessage()}</Button>\r\n                        <Button className=\"hog-pub-header-temp\" variant=\"outlined\" color=\"primary\" style={buttonStyle3}><h1>The Pub</h1></Button>\r\n                </div>\r\n            </AppBar>\r\n        );\r\n    }\r\n\r\n    getLobbyButtonMessage() {\r\n        if (this.props.lobbyType === \"Premade\") {\r\n            return this.props.lobbyOpen ? \"Loading...\" : \"Find a match!\";\r\n        } else {\r\n            return this.props.lobbyOpen ? \"Close Lobby\" : \"Open Lobby\";\r\n        }\r\n    }\r\n}\r\n\r\nclass LobbyFrame extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showLobbyID: false,\r\n            showLobbyCapacity: false,\r\n            showParticipants: false,\r\n            menuOpen: false,\r\n            anchorEl: null,\r\n        };\r\n\r\n        this.handleLobbyCapacityClick = this.handleLobbyCapacityClick.bind(this);\r\n        this.handleLobbyIDClick = this.handleLobbyIDClick.bind(this);\r\n        this.handleParticipantsClick = this.handleParticipantsClick.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"lobby-frame\">\r\n                {this.misc()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    misc() {\r\n        return (\r\n            <div class=\"misc-box\">\r\n                {this.lobbyFrameButton(this.lobbyIDText(), this.handleLobbyIDClick)}\r\n                {this.simpleMenu()}\r\n                {this.lobbyFrameButton(this.lobbyCapacityText(), this.handleLobbyCapacityClick)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleLobbyIDClick() {\r\n        this.setState({\r\n            showLobbyID: !this.state.showLobbyID,\r\n        });\r\n    }\r\n\r\n    handleLobbyCapacityClick() {\r\n        this.setState({\r\n            showLobbyCapacity: !this.state.showLobbyCapacity,\r\n        });\r\n    }\r\n\r\n    handleParticipantsClick() {\r\n        this.setState({\r\n            showParticipants: !this.state.showParticipants,\r\n        })\r\n    }\r\n\r\n    lobbyIDText() {\r\n        return this.state.showLobbyID ? this.props.lobbyID : \"Show Lobby ID\";\r\n    }\r\n\r\n    lobbyCapacityText() {\r\n        return this.state.showLobbyCapacity ? this.props.numParticipants + \"/10\" : \"Show Lobby Capacity\";\r\n    }\r\n\r\n    participantsText() {\r\n        return this.state.showParticipants ? this.makeParticipants() : \"Show Participants\";\r\n    }\r\n\r\n    lobbyFrameButton(text, clickHandler, id) {\r\n        const style = {\r\n            height: '5%',\r\n            width: '85%',\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n    \r\n            outline: 'none',\r\n            color: 'black',\r\n            borderColor: 'black',\r\n            boxShadow: '2px 2px 5px -3px black',\r\n        }\r\n\r\n        return (\r\n            <Button className=\"lobby-frame-button\" id={id} variant=\"outlined\" onClick={clickHandler} style={style}>{text}</Button>\r\n        );\r\n    }\r\n\r\n    simpleMenu() {\r\n        const handleClick = (event) => {\r\n            this.setState({\r\n                menuOpen: !this.state.menuOpen,\r\n                anchorEl: event.currentTarget,\r\n            })\r\n        }\r\n\r\n        const handleClose = () => {\r\n            this.setState({\r\n                menuOpen: false,\r\n            })\r\n        }\r\n\r\n        const makeParticipants = () => {\r\n            var participants = []\r\n            for (var key in this.props.participants) {\r\n                participants.push(<MenuItem onClick={handleClose}>{this.props.participants[key]}</MenuItem>)\r\n            }\r\n            return participants;\r\n        }\r\n      \r\n        return (\r\n            <React.Fragment>\r\n                {this.lobbyFrameButton(\"Show Participants\", handleClick, \"participants\")}\r\n                <Menu keepMounted anchorEl={this.state.anchorEl} open={this.state.menuOpen} onClose={handleClose}\r\n                 anchorOrigin={{vertical: 'bottom', horizontal: 'center'}} transformOrigin={{vertical: 'bottom', horizontal: 'center'}}> \r\n                    {makeParticipants()}\r\n                </Menu>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n  \r\nclass ChatFrame extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            numMessagesSent: 0,\r\n            numMessagesReceived: 0,\r\n            messages: {},\r\n            lastMessageTime: Math.floor(this.props.initTime.getTime() / 1000),\r\n            messageHelperText: \"\",\r\n        }\r\n\r\n        this.handleSendMessage = this.handleSendMessage.bind(this);\r\n        this.sendMessage = this.sendMessage.bind(this);\r\n        this.makeMessageBubble = this.makeMessageBubble.bind(this);\r\n\r\n        this.getMessages = this.getMessages.bind(this);\r\n        this.addAllListeners = this.addAllListeners.bind(this);\r\n\r\n        this.addAllListeners();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"chat-frame-no-video\" id=\"chat-frame\">\r\n                {this.messages()}\r\n                {this.sendMessageBox()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        /* Auto scroll down */\r\n        const scrollDiv = document.getElementById(\"dummyScroll\");\r\n        if (scrollDiv != null) {\r\n            scrollDiv.scrollIntoView(true, { behavior: \"smooth\" });\r\n        }\r\n\r\n        /* Redirect listeners after chatID has changed */\r\n        if (prevProps.chatID !== this.props.chatID) {\r\n            this.addAllListeners();\r\n        }\r\n    }\r\n\r\n    addAllListeners() {\r\n        this.getMessages();\r\n    }\r\n\r\n    messages() {\r\n        return (\r\n            <div class=\"messages-frame\">\r\n                {this.makeMessages()}\r\n                <div id=\"dummyScroll\"></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    makeMessages() {\r\n        var messages = [];\r\n        for (var key in this.state.messages) {\r\n            messages.push(this.makeMessageBubble(key))\r\n        }\r\n        return messages;\r\n    }\r\n\r\n    makeMessageBubble(messageID) {\r\n        function getFormattedTime(date) {\r\n            var timeFormatted = date.toTimeString().substr(0,5);\r\n            const hour = timeFormatted.substr(0, 2);\r\n            if (hour == 0) {\r\n                timeFormatted = \"12\" + timeFormatted.substr(2) + \" am\";\r\n            } else if (hour <= 12) { // need to change 00:01 am to 12:01 am\r\n                timeFormatted += \" am\";\r\n            } else {\r\n                timeFormatted = timeFormatted.substr(0, 2) % 12 + timeFormatted.substr(2, 5) + \" pm\";\r\n            }\r\n            return timeFormatted\r\n        }\r\n\r\n        function makeRealMessage(messageData, userID) {\r\n            const messageClass = (messageData.userID == userID) ? \"user-message\" : \"other-message\";\r\n            var date = new Date(messageData.timestamp.seconds * 1000);\r\n            var timeFormatted = getFormattedTime(date);\r\n            return (\r\n                <div class={messageClass}>\r\n                    <div class=\"message-bubble\">\r\n                        <div class=\"message-metadata\">\r\n                            <div class=\"message-username\">{messageData.username}</div>\r\n                            <div class=\"message-timestamp\">{timeFormatted}</div>\r\n                        </div>\r\n                        <div class=\"message-content\">\r\n                            {messageData.content}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        function makeStatusMessage(messageData, userID) {\r\n            return (\r\n                <div class=\"status-msg\">\r\n                    {messageData.content}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const messageData = this.state.messages[messageID];\r\n        if (messageData.type == \"user_content\") {\r\n            return makeRealMessage(messageData, this.props.userID);\r\n        } else {\r\n            return makeStatusMessage(messageData, this.props.userID);\r\n        }\r\n    }\r\n\r\n    sendMessageBox() {\r\n        return (\r\n            <form class=\"send-message-form\" onSubmit={this.handleSendMessage}>\r\n                <TextField className=\"send-message-input\" id=\"message-input\" variant=\"outlined\"\r\n                 label=\"Enter a message\" error={this.state.messageHelperText} helperText={this.state.messageHelperText} fullWidth={true} autoComplete=\"off\"></TextField>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    getMessages() {\r\n        const ref = db.collection(\"chats\").doc(this.props.chatID).collection(\"messages\").orderBy(\"timestamp\", \"desc\").limit(1);\r\n        const unsubscribe = ref.onSnapshot(collection => {\r\n            collection.forEach(doc => {\r\n                const data = doc.data();\r\n                    this.setState({\r\n                        messages: {\r\n                            ...this.state.messages,\r\n                            [this.state.numMessagesReceived + 1]: data,\r\n                        },\r\n                        numMessagesReceived: this.state.numMessagesReceived + 1,\r\n                        lastMessageTime: data.timestamp.seconds,\r\n                    });\r\n            });\r\n        });\r\n    }\r\n\r\n    handleSendMessage(event) {\r\n        event.preventDefault();\r\n        const inputForm = document.getElementById(\"message-input\");\r\n        const message = inputForm.value;\r\n        inputForm.value = \"\";\r\n        if (message != \"\") {\r\n            this.setState({\r\n                numMessagesSent: this.state.numMessagesSent + 1,\r\n            });\r\n            this.sendMessage(message);\r\n        }\r\n    }\r\n\r\n    sendMessage(message) {\r\n        const send = functions.httpsCallable('sendMessage');\r\n        const curState = this\r\n        const success = send({message: message, messageNumber: this.state.numMessagesSent}).then(function(result) {\r\n            if(!result.data.verified) {\r\n                curState.setState({\r\n                    messageHelperText: result.data.message,\r\n                });\r\n            }\r\n            else {\r\n                curState.setState({\r\n                    messageHelperText: \"\"\r\n                })\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nclass VideoFrame extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            callFrame: null,\r\n        };\r\n\r\n        this.joinCall = this.joinCall.bind(this);\r\n        this.makeCallFrame = this.makeCallFrame.bind(this);\r\n        this.joinButton = this.joinButton.bind(this);\r\n\r\n        this.addDisconnectListener = this.addDisconnectListener.bind(this);\r\n        this.addListeners = this.addListeners.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"video-frame-no-video\" id=\"video-frame\">\r\n                {this.joinButton()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.videoCallURL !== this.props.videoCallURL) {\r\n            this.disconnect();\r\n        }\r\n    }\r\n\r\n    joinButton() {\r\n        const style = {\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n          };\r\n\r\n        return (\r\n            <Button className=\"join-video-button\" id=\"join-video-button\" variant=\"contained\" color=\"primary\" style={style} onClick={this.joinCall}>\r\n                <p class=\"join-video-text\">Join Voice and Video!</p>\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    joinCall() {\r\n        this.makeCallFrame();\r\n\r\n        this.state.callFrame.join({url: this.props.videoCallURL});\r\n\r\n        this.addListeners();\r\n        this.cssYesVideo();\r\n    }\r\n\r\n    makeCallFrame() {\r\n        const style = {\r\n            iframeStyle: {\r\n                position: \"fixed\",\r\n                left: \"16%\",\r\n                top: \"8%\",\r\n                width: \"48%\",\r\n                height: \"90%\",\r\n            },\r\n            showLeaveButton: true,\r\n            showFullscreenButton: true,\r\n            userName: this.props.username,\r\n        };\r\n        const callFrame = DailyIframe.createFrame(style);\r\n        this.state.callFrame = callFrame;\r\n    }\r\n\r\n    addListeners() {\r\n        this.addDisconnectListener();\r\n    }\r\n\r\n    addDisconnectListener() {\r\n        this.state.callFrame.on(\"left-meeting\", (event) => {\r\n            this.state.callFrame.destroy();\r\n            this.cssNoVideo();\r\n        })\r\n    }\r\n\r\n    disconnect() {\r\n        if (this.state.callFrame !== null) {\r\n            this.state.callFrame.leave();\r\n        }\r\n    }\r\n\r\n    cssYesVideo() {\r\n        const chatFrame = document.getElementById(\"chat-frame\");\r\n        const videoFrame = document.getElementById(\"video-frame\");\r\n        chatFrame.setAttribute(\"class\", \"chat-frame-yes-video\");\r\n        videoFrame.setAttribute(\"class\", \"video-frame-yes-video\");\r\n    }\r\n\r\n    cssNoVideo() {\r\n        const chatFrame = document.getElementById(\"chat-frame\");\r\n        const videoFrame = document.getElementById(\"video-frame\");\r\n        chatFrame.setAttribute(\"class\", \"chat-frame-no-video\");\r\n        videoFrame.setAttribute(\"class\", \"video-frame-no-video\");\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Circle from '@material-ui/core/CircularProgress';\r\n\r\nimport './Loading.css';\r\n\r\nexport default class Loading extends Component {\r\n    render() {\r\n        return (\r\n            <div class=\"full-frame-loading\">\r\n                <h1 class=\"hog-pub-text\">Hog Pub</h1>\r\n                <h2 class=\"loading-text\">Loading...</h2>\r\n                <Circle size={100} className=\"loading\"></Circle>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {firebase, db, auth} from './services/firebase';\r\n\r\nimport './index.css';\r\nimport App from './pages/LoginV2';\r\nimport LobbyApp from './pages/ChatV2';\r\nimport Loading from './pages/Loading';\r\nimport { setTransitions, removeTransitions } from './pages/LoginFirebase';\r\n\r\n\r\n\r\nexport function renderLogin(usernameError, usernameErrorMessage, createLobbyError, createLobbyErrorMessage, joinLobbyError, joinLobbyErrorMessage) {\r\n  ReactDOM.render(<App usernameError={usernameError} usernameHelperText={usernameErrorMessage}\r\n    createLobbyError={createLobbyError} createLobbyHelperText={createLobbyErrorMessage}\r\n    joinLobbyError={joinLobbyError} joinLobbyHelperText={joinLobbyErrorMessage}\r\n  />, document.getElementById('root'));\r\n\r\n  auth.setPersistence(firebase.auth.Auth.Persistence.SESSION).then(function () {\r\n    return auth.signInAnonymously();\r\n  });\r\n}\r\n\r\nexport async function renderPageWithUserID(userId) {\r\n  const userInfo = db.collection('users').doc(userId);\r\n  var chatID = \"\"\r\n  var username = \"\"\r\n  await userInfo.get().then(function(doc) {\r\n    if(doc.exists) {\r\n      chatID = doc.data().chat_id\r\n      username = doc.data().username\r\n    }\r\n  })\r\n  .catch(function(error) {\r\n    console.error(\"broke here \", error)\r\n  })\r\n\r\n  if(chatID !== \"\") {\r\n    renderChat(chatID, username)\r\n  }\r\n  else {\r\n    console.log(\"poo\");\r\n    renderLogin();\r\n    removeTransitions();\r\n    setTransitions();\r\n  }\r\n}\r\n\r\nexport function renderChat(chatID, username) {\r\n  ReactDOM.render(<LobbyApp chatID={chatID} username={username}/>, document.getElementById('root'));\r\n}\r\n\r\nexport function renderLoading() {\r\n  ReactDOM.render(<Loading />, document.getElementById(\"root\"));\r\n}\r\n\r\n\r\nauth.onAuthStateChanged(function(user) {\r\n  console.log(\"AUTH CHANGED!!!: \", user);\r\n  if(user) {\r\n    renderPageWithUserID(user.uid)\r\n  }\r\n  else {\r\n    renderLogin();\r\n    removeTransitions();\r\n    setTransitions();\r\n  }\r\n});\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}