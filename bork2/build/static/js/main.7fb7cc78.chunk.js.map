{"version":3,"sources":["pig_logo/pig_logo.png","serviceWorker.js","services/firebase.js","pages/LoginFirebase.js","pages/LoginV2.js","pages/ChatV2.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","firebase","require","initializeApp","apiKey","authDomain","projectId","databaseURL","auth","db","firestore","rt_db","database","functions","setTransitions","transition","document","getElementById","joinLobbyButton","joinDropdownButton","joinLobbyTransition","createLobbyButton","createDropdownButton","createLobbyTransition","button","signInType","addEventListener","func","timeFrame","lastTime","now","Date","console","log","throttle","e","a","username_box","username","value","inputChatID","getInputChatID","signIn","httpsCallable","chatID","obj","data","usernameError","createLobbyError","joinLobbyError","renderLogin","usernameErrorMessage","createLobbyErrorMessage","joinLobbyErrorMessage","renderChat","joinLobbyInput","createLobbyInput","App","props","class","this","loginFrame","Component","Form","description","id","FormGrid","styles","soloStyle","fontSize","background","color","createStyle","height","width","borderWidth","borderColor","joinStyle","textFieldStyle","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","buttonStyle","formGrid","Grid","container","TextField","variant","error","label","helperText","usernameHelperText","fullWidth","autoComplete","InputLabelProps","style","InputProps","inputProps","textAlign","Button","className","size","item","createLobbyButtonSet","joinLobbyButtonSet","onMouseEnter","displayChange","onMouseLeave","createLobbyDropdown","joinLobbyDropdown","hidden","type","createLobbyHelperText","joinLobbyHelperText","idFrom","idTo","setAttribute","HogPub","hogPubHeader","comingSoon","logo","src","Logo","alt","LobbyApp","state","userID","currentUser","uid","lobbyOpen","participants","numParticipants","setLobbyOpen","handleLogout","bind","getParticipants","handleLobbyStatusChange","changeConnectionStatus","addAllListeners","initTime","ref","videoCallURL","collection","doc","orderBy","onSnapshot","forEach","user_id","setState","get","chat","lobby_open","set","onDisconnect","update","deleteInfo","userId","chatId","then","result","catch","refs","videoFrame","disconnect","signOut","LobbyFrame","hogPub","misc","openLobbyButton","lobbyInfoBox","leaveLobbyButton","onClick","getLobbyButtonMessage","ChatFrame","numMessagesSent","numMessagesReceived","messages","lastMessageTime","Math","floor","getTime","handleSendMessage","sendMessage","makeMessageBubble","getMessages","sendMessageBox","scrollDiv","scrollIntoView","behavior","makeMessages","key","push","messageID","messageData","messageClass","timeFormatted","date","toTimeString","substr","getFormattedTime","timestamp","seconds","content","makeRealMessage","makeStatusMessage","onSubmit","limit","event","preventDefault","inputForm","message","send","messageNumber","VideoFrame","callFrame","joinCall","makeCallFrame","joinButton","addDisconnectListener","addListeners","join","url","cssYesVideo","DailyIframe","createFrame","iframeStyle","position","left","showLeaveButton","showFullscreenButton","on","destroy","cssNoVideo","leave","chatFrame","ReactDOM","render","setPersistence","Auth","Persistence","SESSION","signInAnonymously","code","renderPageWithUserID","userInfo","exists","chat_id","onAuthStateChanged","user","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7fb7cc78.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pig_logo.d0d99a55.png\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export const firebase = require('firebase');\r\nconst config = {\r\n    apiKey: \"AIzaSyBriNz3DFDo1ra0CmHC0_ZpoCYnonSWOoo\",\r\n    authDomain: \"bork-cc.firebaseapp.com\",\r\n    projectId: \"bork-cc\",\r\n    databaseURL: \"https://bork-cc.firebaseio.com\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nexport const auth = firebase.auth();\r\nexport const db = firebase.firestore();\r\nexport const rt_db = firebase.database()\r\nexport const functions = firebase.functions()\r\n// firebase.database();","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { renderLogin, renderChat } from './../index';\r\n\r\nimport { auth, functions } from '../services/firebase';\r\n\r\nfunction loginButtonTransition() {\r\n    const soloQueueButton = document.getElementById('solo-queue-button');\r\n    transition(soloQueueButton, \"soloQueue\");\r\n}\r\n\r\nfunction joinLobbyTransition() {\r\n    const joinLobbyButton = document.getElementById(\"join-lobby-button\");\r\n    const joinDropdownButton = document.getElementById(\"join-input-button\");\r\n    transition(joinLobbyButton, \"joinLobby\");\r\n    transition(joinDropdownButton, \"joinLobby\");\r\n}\r\n\r\nfunction createLobbyTransition() {\r\n    const createLobbyButton = document.getElementById(\"create-lobby-button\");\r\n    const createDropdownButton = document.getElementById(\"create-input-button\");\r\n    transition(createLobbyButton, \"createLobby\");\r\n    transition(createDropdownButton, \"createLobby\");\r\n}\r\n\r\nexport function setTransitions() {\r\n    loginButtonTransition();\r\n    joinLobbyTransition();\r\n    createLobbyTransition();\r\n}\r\n\r\n/**\r\n * Retrive username, inputted chatID from input boxes in the login page.\r\n * \r\n * Call server's sign in function.\r\n * \r\n * If it works, render the chat page.\r\n * If it doesn't re-render the login page with the correct error message\r\n * \r\n * @param {html button} button \r\n * @param {string} signInType \r\n * @returns {null}\r\n * \r\n */\r\nfunction transition(button, signInType) {\r\n    button.addEventListener('click', throttle(async e => {\r\n        const username_box = document.getElementById(\"username-textfield\");\r\n        const username = username_box.value;\r\n        const inputChatID = getInputChatID(signInType);\r\n\r\n        const signIn = functions.httpsCallable('signIn');\r\n\r\n        const obj = await signIn({username: username, chatID: inputChatID, signInType: signInType});\r\n\r\n        const data = obj.data;\r\n        console.log(data);\r\n        if (data.usernameError || data.createLobbyError || data.joinLobbyError) {\r\n            renderLogin(data.usernameError, data.usernameErrorMessage, data.createLobbyError, data.createLobbyErrorMessage, data.joinLobbyError, data.joinLobbyErrorMessage);\r\n        } else {\r\n            renderChat(data.chatID, data.username);\r\n        }\r\n    }, 2000)\r\n    );\r\n}\r\n\r\nfunction throttle(func, timeFrame) {\r\n    var lastTime = 0;\r\n    return function () {\r\n        var now = new Date();\r\n        if (now - lastTime >= timeFrame) {\r\n            func();\r\n            lastTime = now;\r\n        } else {\r\n            console.log(\"waiting\");\r\n        }\r\n    };\r\n  }\r\n\r\n/**\r\n * Retrieves the user-inputted chatID from the input boxes, given their signInType.\r\n * \r\n * @param {string} signInType \r\n * @returns {string} chatID\r\n * \r\n */\r\nfunction getInputChatID(signInType) {\r\n    const joinLobbyInput = document.getElementById(\"join-lobby-input\");\r\n    const createLobbyInput = document.getElementById(\"create-lobby-input\");\r\n    if (signInType === \"joinLobby\") {\r\n        return joinLobbyInput.value;\r\n    } else if (signInType === \"createLobby\") {\r\n        return createLobbyInput.value;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport './LoginV2.css';\r\nimport { joinLobbyTransition } from './LoginFirebase';\r\nimport Logo from './../pig_logo/pig_logo.png';\r\n\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"full-frame\">\r\n        {this.loginFrame()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  loginFrame() {\r\n    return (\r\n      <div class=\"login-frame\">\r\n        <Form {...this.props}></Form>\r\n        <HogPub></HogPub>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"form-frame\">\r\n        {this.description()}\r\n        <FormGrid {...this.props}></FormGrid>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  description() {\r\n    return (\r\n      <div class=\"descriptions\">\r\n        <h2 class=\"main-description\">\r\n          Enter Among Us Lobbies!\r\n        </h2>\r\n        <h3 class=\"sub-description\">\r\n          <p id=\"username-warning\"></p>\r\n        </h3>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nclass FormGrid extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.styles = importStyles();\r\n  }\r\n\r\n  render() {\r\n    return this.formGrid();\r\n  }\r\n\r\n  \r\n\r\n  formGrid() {\r\n    return (\r\n      <Grid container class=\"container\">\r\n          <TextField class=\"username-textfield\" id=\"username-textfield\" variant=\"outlined\" error={this.props.usernameError}\r\n          label=\"Username\" helperText={this.props.usernameHelperText} fullWidth={true} autoComplete=\"off\"\r\n          InputLabelProps={{style: {fontSize: 25}}}\r\n          InputProps={{style: {height: 65, fontSize: 25}}}\r\n          inputProps={{style: {fontSize: 40, textAlign: \"center\"}}}>\r\n          </TextField>\r\n\r\n          <Button className=\"solo-queue-button\" id=\"solo-queue-button\" variant=\"contained\" color=\"primary\" size=\"large\" fullWidth={true}\r\n           style={this.styles.soloStyle} >Solo Queue</Button>\r\n\r\n          <Grid item class=\"buttons\">\r\n            {this.createLobbyButtonSet()}\r\n            {this.joinLobbyButtonSet()}\r\n          </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n\r\n  createLobbyButtonSet() {\r\n    return (\r\n      <div id=\"create-lobby-box\" onMouseEnter={this.displayChange(\"create-invis\", \"create-show\")} onMouseLeave={this.displayChange(\"create-show\", \"create-invis\")} >\r\n        <Button id=\"create-lobby-button\" variant=\"outlined\" color=\"primary\" size=\"large\" fullWidth={true} style={this.styles.createStyle}>Create Lobby</Button>\r\n        {this.createLobbyDropdown()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  joinLobbyButtonSet() {\r\n    return (\r\n      <div id=\"join-lobby-box\"\r\n       onMouseEnter={this.displayChange(\"join-invis\", \"join-show\")} onMouseLeave={this.displayChange(\"join-show\", \"join-invis\")} >\r\n          <Button id=\"join-lobby-button\" variant=\"outlined\" color=\"primary\" size=\"large\" fullWidth={true} style={this.styles.joinStyle} >Join Lobby</Button>\r\n          {this.joinLobbyDropdown()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  createLobbyDropdown() {\r\n    return (\r\n      <div class=\"create-lobby-div\" id=\"create-invis\">\r\n        <TextField className=\"create-lobby-input\" hidden={true} id=\"create-lobby-input\" variant=\"outlined\" type=\"text\" autoComplete=\"off\"\r\n          label=\"Enter Lobby ID\" error={this.props.createLobbyError} helperText={this.props.createLobbyHelperText} \r\n          InputProps={{style: this.styles.textFieldStyle}} >\r\n         </TextField>\r\n        <Button id=\"create-input-button\" variant=\"contained\" color=\"primary\" style={this.styles.buttonStyle}>\r\n          <p class=\"create-input-text\">Join!</p>\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  joinLobbyDropdown() {\r\n    return (\r\n      <div class=\"join-lobby-div\" id=\"join-invis\">\r\n        <TextField className=\"join-lobby-input\" hidden={true} id=\"join-lobby-input\" variant=\"outlined\" type=\"text\" autoComplete=\"off\"\r\n          label=\"Enter Lobby ID\" error={this.props.joinLobbyError} helperText={this.props.joinLobbyHelperText} \r\n          InputProps={{style: this.styles.textFieldStyle}} >\r\n         </TextField>\r\n        <Button id=\"join-input-button\" variant=\"contained\" color=\"primary\" style={this.styles.buttonStyle}>\r\n          <p class=\"join-input-text\">Join!</p>\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  displayChange(idFrom, idTo) {\r\n    function helper() {\r\n      const div = document.getElementById(idFrom);\r\n      div.setAttribute(\"id\", idTo);\r\n    }\r\n    return helper\r\n  }\r\n}\r\n\r\nclass HogPub extends Component {\r\n  render() {\r\n    return (\r\n      <div class=\"hog-pub-frame\">\r\n        {this.hogPubHeader()}\r\n        {this.comingSoon()}\r\n        {this.logo()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  hogPubHeader() {\r\n    return (\r\n      <h1 class=\"header\">Hog Pub</h1>\r\n    )\r\n  }\r\n\r\n  comingSoon() {\r\n    return (\r\n      <h3 class=\"coming-soon\">Other games coming soon!</h3>\r\n    );\r\n  }\r\n\r\n  logo() {\r\n    return (\r\n      <img class=\"logo\" src={Logo} alt=\"logo\"/>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nfunction importStyles() {\r\n  return {\r\n    soloStyle: {\r\n      fontSize: 20,\r\n\r\n      background: 'linear-gradient(45deg, #2196F3 5%, #21CBF3 90%)',\r\n      color: 'white',\r\n    },\r\n\r\n    createStyle: {\r\n      height: '100%',\r\n      width: '100%',\r\n\r\n      borderWidth: 1.2,\r\n      borderColor: '#21CBF3',\r\n      \r\n      fontSize: 20,\r\n\r\n      color: '#21CBF3',\r\n    },\r\n\r\n    joinStyle: {\r\n      height: '100%',\r\n      width: '100%',\r\n\r\n      borderWidth: 1.2,\r\n      borderColor: '#21CBF3',\r\n      \r\n      fontSize: 20,\r\n\r\n      color: '#21CBF3',\r\n    },\r\n\r\n    textFieldStyle: {\r\n      borderTopRightRadius: '0px',\r\n      borderBottomRightRadius: '0px',\r\n      borderTopLeftRadius: '20px',\r\n      borderBottomLeftRadius: '20px',\r\n    },\r\n\r\n    buttonStyle: {\r\n      height: '100%',\r\n      width: '30%',\r\n\r\n      borderTopRightRadius: '20px',\r\n      borderBottomRightRadius: '20px',\r\n      borderTopLeftRadius: '0px',\r\n      borderBottomLeftRadius: '0px',\r\n\r\n      background: '#21CBF3',\r\n      color: 'white',\r\n    },\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport DailyIframe from '@daily-co/daily-js';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport './ChatV2.css';\r\nimport {auth, db, rt_db, functions, firebase} from '../services/firebase';\r\nimport { renderLogin } from './../index';\r\nimport { setTransitions } from './LoginFirebase';\r\n\r\n\r\nexport default class LobbyApp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chatID: this.props.chatID,\r\n            userID: auth.currentUser.uid,\r\n            username: this.props.username,\r\n            \r\n            lobbyOpen: null,\r\n\r\n            participants: {},\r\n            numParticipants: 0,\r\n        };\r\n        \r\n        this.setLobbyOpen();\r\n\r\n        this.handleLogout = this.handleLogout.bind(this);\r\n\r\n        this.getParticipants = this.getParticipants.bind(this);\r\n        this.handleLobbyStatusChange = this.handleLobbyStatusChange.bind(this);\r\n        this.changeConnectionStatus = this.changeConnectionStatus.bind(this);\r\n        this.addAllListeners = this.addAllListeners.bind(this);\r\n\r\n        this.addAllListeners();\r\n        console.log(this.props.username);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"full-frame\">\r\n                <LobbyFrame chatID={this.state.chatID} lobbyOpen={this.state.lobbyOpen}\r\n                 handleLogout={this.handleLogout} handleLobbyStatusChange={this.handleLobbyStatusChange}/>\r\n\r\n                <ChatFrame chatID={this.state.chatID} userID={this.state.userID} username={this.props.username} initTime={new Date()}/>\r\n\r\n                <VideoFrame ref=\"videoFrame\" videoCallURL={`https://hogpub.daily.co/${this.state.chatID}`}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    addAllListeners() {\r\n        this.getParticipants();\r\n        this.changeConnectionStatus();\r\n    }\r\n\r\n    getParticipants() {\r\n        const ref = db.collection(\"chats\").doc(this.state.chatID).collection(\"participants\").orderBy(\"timestamp\");\r\n        ref.onSnapshot(collection => {\r\n            var participants = {};\r\n            var numParticipants = 0;\r\n\r\n            collection.forEach(doc => {\r\n                const data = doc.data();\r\n                participants[data.user_id] = data.username;\r\n\r\n                numParticipants += 1;\r\n            });\r\n\r\n            this.setState({\r\n                numParticipants: numParticipants,\r\n                participants: participants,\r\n            });\r\n        });\r\n    }\r\n\r\n    async setLobbyOpen() {\r\n        const chat = await db.collection(\"chats\").doc(this.state.chatID).get();\r\n        this.setState({\r\n            lobbyOpen: chat.data().lobby_open,\r\n        });\r\n    }\r\n\r\n    changeConnectionStatus() {\r\n        rt_db.ref('users/' + this.state.userID + \"/is_disconnected\").set(false); \r\n        var presenceRef = rt_db.ref(\"users/\" + this.state.userID + \"/is_disconnected\");     \r\n        presenceRef.onDisconnect().set(true);\r\n    }\r\n\r\n    async handleLobbyStatusChange() {\r\n        await db.collection(\"chats\").doc(this.state.chatID).update({\r\n            lobby_open: !this.state.lobbyOpen,\r\n        }); \r\n        this.setState({\r\n            lobbyOpen: !this.state.lobbyOpen,\r\n        });\r\n    }\r\n\r\n    // this deletes from local participants, need to delete from DATABASE\r\n    async handleLogout() {\r\n        const deleteInfo = functions.httpsCallable('deleteUserInfo')\r\n        await deleteInfo({userId: this.state.userID, chatId: this.state.chatID, username: this.state.username}).then(result => { // CORS error that wasn't there earlier\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n\r\n        // disconnect from the video call using the VideoFrame class's method\r\n        this.refs.videoFrame.disconnect();\r\n        \r\n        auth.signOut()\r\n    }\r\n\r\n}\r\n\r\nclass LobbyFrame extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"lobby-frame\">\r\n                {this.hogPub()}\r\n                {this.misc()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    hogPub() {\r\n        return (\r\n            <div class=\"hog-pub-box\">\r\n                <h1 class=\"hog-pub-header\">The Pub</h1>\r\n                <h2 class=\"lobby-title\">Among Us</h2>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n    misc() {\r\n        return (\r\n            <div class=\"misc-box\">\r\n                {this.openLobbyButton()}\r\n                {this.lobbyInfoBox()}\r\n                {this.leaveLobbyButton()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    openLobbyButton() {\r\n        return (\r\n            <Button class=\"start-queue-button\" onClick={this.props.handleLobbyStatusChange}>\r\n                <p class=\"start-queue-text\">{this.getLobbyButtonMessage()}</p>\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    leaveLobbyButton() {\r\n        return (\r\n            <Button class=\"leave-lobby-button\" onClick={this.props.handleLogout}>\r\n                <p class=\"leave-lobby-text\">Leave Lobby</p>\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    lobbyInfoBox() {\r\n        return (\r\n            <div class=\"lobby-info-box\">\r\n                <h3 class=\"lobby-info-header\">Lobby Info</h3>\r\n                <div class=\"lobby-info-text\">\r\n                    <p class=\"random-stuff\">Chat ID: {this.props.chatID}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getLobbyButtonMessage() {\r\n        return this.props.lobbyOpen ? \"Close Lobby\" : \"Open Lobby\";\r\n    }\r\n}\r\n\r\nclass ChatFrame extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            numMessagesSent: 0,\r\n            numMessagesReceived: 0,\r\n            messages: {},\r\n            lastMessageTime: Math.floor(this.props.initTime.getTime() / 1000),\r\n        }\r\n\r\n        this.handleSendMessage = this.handleSendMessage.bind(this);\r\n        this.sendMessage = this.sendMessage.bind(this);\r\n        this.makeMessageBubble = this.makeMessageBubble.bind(this);\r\n\r\n        this.getMessages = this.getMessages.bind(this);\r\n        this.addAllListeners = this.addAllListeners.bind(this);\r\n\r\n        this.addAllListeners();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"chat-frame-no-video\" id=\"chat-frame\">\r\n                {this.messages()}\r\n                {this.sendMessageBox()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // auto scroll down\r\n    componentDidUpdate() {\r\n        const scrollDiv = document.getElementById(\"dummyScroll\");\r\n        if (scrollDiv != null) {\r\n            scrollDiv.scrollIntoView(true, { behavior: \"smooth\" });\r\n        }\r\n    }\r\n\r\n    addAllListeners() {\r\n        this.getMessages();\r\n    }\r\n\r\n    messages() {\r\n        return (\r\n            <div class=\"messages-frame\">\r\n                {this.makeMessages()}\r\n                <div id=\"dummyScroll\"></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    makeMessages() {\r\n        var messages = [];\r\n        for (var key in this.state.messages) {\r\n            messages.push(this.makeMessageBubble(key))\r\n        }\r\n        return messages;\r\n    }\r\n\r\n    makeMessageBubble(messageID) {\r\n        function getFormattedTime(date) {\r\n            var timeFormatted = date.toTimeString().substr(0,5);\r\n            if (timeFormatted.substr(0, 2) <= 12) { // need to change 00:01 am to 12:01 am\r\n                timeFormatted += \" am\";\r\n            } else {\r\n                timeFormatted = timeFormatted.substr(0, 2) % 12 + timeFormatted.substr(2, 5) + \" pm\";\r\n            }\r\n            return timeFormatted\r\n        }\r\n\r\n        function makeRealMessage(messageData, userID) {\r\n            const messageClass = (messageData.userID == userID) ? \"user-message\" : \"other-message\";\r\n            var date = new Date(messageData.timestamp.seconds * 1000);\r\n            var timeFormatted = getFormattedTime(date);\r\n            return (\r\n                <div class={messageClass}>\r\n                    <div class=\"message-bubble\">\r\n                        <div class=\"message-metadata\">\r\n                            <div class=\"message-username\">{messageData.username}</div>\r\n                            <div class=\"message-timestamp\">{timeFormatted}</div>\r\n                        </div>\r\n                        <div class=\"message-content\">\r\n                            {messageData.content}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        function makeStatusMessage(messageData, userID) {\r\n            return (\r\n                <div class=\"status-msg\">\r\n                    {messageData.content}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const messageData = this.state.messages[messageID];\r\n        if (messageData.type == \"user_content\") {\r\n            return makeRealMessage(messageData, this.props.userID);\r\n        } else {\r\n            return makeStatusMessage(messageData, this.props.userID);\r\n        }\r\n    }\r\n\r\n    sendMessageBox() {\r\n        return (\r\n            <form class=\"send-message-form\" onSubmit={this.handleSendMessage}>\r\n                <TextField className=\"send-message-input\" id=\"message-input\" variant=\"outlined\"\r\n                 label=\"Enter a message\" fullWidth={true} autoComplete=\"off\"></TextField>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    getMessages() {\r\n        const ref = db.collection(\"chats\").doc(this.props.chatID).collection(\"messages\").orderBy(\"timestamp\", \"desc\").limit(1);\r\n        ref.onSnapshot(collection => {\r\n            collection.forEach(doc => {\r\n                const data = doc.data();\r\n                    this.setState({\r\n                        messages: {\r\n                            ...this.state.messages,\r\n                            [this.state.numMessagesReceived + 1]: data,\r\n                        },\r\n                        numMessagesReceived: this.state.numMessagesReceived + 1,\r\n                        lastMessageTime: data.timestamp.seconds,\r\n                    });\r\n            });\r\n        });\r\n    }\r\n\r\n    handleSendMessage(event) {\r\n        event.preventDefault();\r\n        const inputForm = document.getElementById(\"message-input\");\r\n        const message = inputForm.value;\r\n        inputForm.value = \"\";\r\n        if (message != \"\") {\r\n            this.setState({\r\n                numMessagesSent: this.state.numMessagesSent + 1,\r\n            });\r\n            this.sendMessage(message);\r\n        }\r\n    }\r\n\r\n    sendMessage(message) {\r\n        const send = functions.httpsCallable('sendMessage');\r\n        const success = send({message: message, chatID: this.props.chatID, username: this.props.username, messageNumber: this.state.numMessagesSent});\r\n    }\r\n}\r\n\r\nclass VideoFrame extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            callFrame: null,\r\n        };\r\n\r\n        this.joinCall = this.joinCall.bind(this);\r\n        this.makeCallFrame = this.makeCallFrame.bind(this);\r\n        this.joinButton = this.joinButton.bind(this);\r\n\r\n        this.addDisconnectListener = this.addDisconnectListener.bind(this);\r\n        this.addListeners = this.addListeners.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"video-frame-no-video\" id=\"video-frame\">\r\n                {this.joinButton()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    joinButton() {\r\n        const style = {\r\n\r\n          };\r\n\r\n        return (\r\n            <Button className=\"join-video-button\" id=\"join-video-button\" variant=\"contained\" color=\"primary\" style={style} onClick={this.joinCall}>\r\n                <p class=\"join-video-text\">Join Voice and Video!</p>\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    joinCall() {\r\n        this.makeCallFrame();\r\n\r\n        this.state.callFrame.join({url: this.props.videoCallURL});\r\n\r\n        this.addListeners();\r\n        this.cssYesVideo();\r\n    }\r\n\r\n    makeCallFrame() {\r\n        const style = {\r\n            iframeStyle: {\r\n                position: \"fixed\",\r\n                left: \"60%\",\r\n                width: \"40%\",\r\n                height: \"100%\",\r\n                borderWidth: 0,\r\n\r\n            },\r\n            showLeaveButton: true,\r\n            showFullscreenButton: true,\r\n        };\r\n        const callFrame = DailyIframe.createFrame(style);\r\n        console.log(callFrame);\r\n        this.state.callFrame = callFrame;\r\n        console.log(this.state.callFrame);\r\n    }\r\n\r\n    addListeners() {\r\n        this.addDisconnectListener();\r\n    }\r\n\r\n    addDisconnectListener() {\r\n        this.state.callFrame.on(\"left-meeting\", (event) => {\r\n            this.state.callFrame.destroy();\r\n            this.cssNoVideo();\r\n        })\r\n    }\r\n\r\n    disconnect() {\r\n        if (this.state.callFrame !== null) {\r\n            this.state.callFrame.leave();\r\n        }\r\n    }\r\n\r\n    cssYesVideo() {\r\n        const chatFrame = document.getElementById(\"chat-frame\");\r\n        const videoFrame = document.getElementById(\"video-frame\");\r\n        chatFrame.setAttribute(\"class\", \"chat-frame-yes-video\");\r\n        videoFrame.setAttribute(\"class\", \"video-frame-yes-video\");\r\n    }\r\n\r\n    cssNoVideo() {\r\n        const chatFrame = document.getElementById(\"chat-frame\");\r\n        const videoFrame = document.getElementById(\"video-frame\");\r\n        chatFrame.setAttribute(\"class\", \"chat-frame-no-video\");\r\n        videoFrame.setAttribute(\"class\", \"video-frame-no-video\");\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {firebase, db, auth} from './services/firebase';\r\n\r\nimport './index.css';\r\nimport App from './pages/LoginV2';\r\nimport LobbyApp from './pages/ChatV2';\r\nimport { setTransitions } from './pages/LoginFirebase';\r\n\r\n\r\n\r\nexport function renderLogin(usernameError, usernameErrorMessage, createLobbyError, createLobbyErrorMessage, joinLobbyError, joinLobbyErrorMessage) {\r\n  console.log(\"PENIS\" ,auth.currentUser);\r\n  ReactDOM.render(<App usernameError={usernameError} usernameHelperText={usernameErrorMessage}\r\n    createLobbyError={createLobbyError} createLobbyHelperText={createLobbyErrorMessage}\r\n    joinLobbyError={joinLobbyError} joinLobbyHelperText={joinLobbyErrorMessage}\r\n  />, document.getElementById('root'));\r\n\r\n  auth.setPersistence(firebase.auth.Auth.Persistence.SESSION).then(function () {\r\n    return auth.signInAnonymously();\r\n  })\r\n  .catch(function(error) {\r\n    var errorCode = error.code;\r\n    var errorMessage = error.message;\r\n  });\r\n}\r\n\r\nexport async function renderPageWithUserID(userId) {\r\n  const userInfo = db.collection('users').doc(userId);\r\n  var chatID = \"\"\r\n  var username = \"\"\r\n  await userInfo.get().then(function(doc) {\r\n    if(doc.exists) {\r\n      chatID = doc.data().chat_id\r\n      username = doc.data().username\r\n    }\r\n  })\r\n  .catch(function(error) {\r\n    console.error(\"broke here \", error)\r\n  })\r\n\r\n  if(chatID !== \"\") {\r\n    renderChat(chatID, username)\r\n  }\r\n  else {\r\n    renderLogin();\r\n    setTransitions();\r\n  }\r\n}\r\n\r\nexport function renderChat(chatID, username) {\r\n  ReactDOM.render(<LobbyApp chatID={chatID} username={username}/>, document.getElementById('root'));\r\n}\r\n\r\n\r\nauth.onAuthStateChanged(function(user) {\r\n  console.log(\"PENIS\", user)\r\n  if(user) {\r\n    renderPageWithUserID(user.uid)\r\n  }\r\n  else {\r\n    renderLogin();\r\n    setTransitions();\r\n  }\r\n});\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}