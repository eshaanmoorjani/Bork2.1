{"version":3,"sources":["pig_logo/pig_logo.png","serviceWorker.js","services/firebase.js","pages/Login.js","pages/LoginFirebase.js","pages/Chat.js","pages/Loading.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","firebase","require","initializeApp","apiKey","authDomain","projectId","databaseURL","auth","setPersistence","Auth","Persistence","LOCAL","db","firestore","rt_db","database","functions","App","props","class","this","loginFrame","Component","Form","description","id","FormGrid","styles","soloStyle","fontSize","background","color","createStyle","height","width","borderWidth","borderColor","joinStyle","textFieldStyle","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","buttonStyle","formGrid","Grid","container","TextField","variant","error","usernameError","label","helperText","usernameHelperText","fullWidth","autoComplete","InputLabelProps","style","InputProps","inputProps","textAlign","Button","className","size","item","createLobbyButtonSet","joinLobbyButtonSet","onMouseEnter","displayChange","onMouseLeave","createLobbyDropdown","joinLobbyDropdown","createLobbyError","hidden","type","createLobbyHelperText","joinLobbyError","joinLobbyHelperText","idFrom","idTo","div","document","getElementById","setAttribute","HogPub","hogPubHeader","comingSoon","logo","src","Logo","alt","setTransitions","transition","jlb","jdb","joinLobbyTransition","clb","cdb","createLobbyTransition","removeTransitions","sqb","parentNode","replaceChild","cloneNode","removeLoginButtonTransition","removeJoinLobbyTransition","removeCreateLobbyTransition","button","signInType","addEventListener","a","username_box","username","value","inputChatID","getInputChatID","renderLoading","signIn","httpsCallable","chatID","obj","data","console","log","signInError","renderLogin","usernameErrorMessage","createLobbyErrorMessage","joinLobbyErrorMessage","renderChat","throttle","onClick","func","timeFrame","lastTime","now","Date","joinLobbyInput","createLobbyInput","LobbyApp","state","userID","currentUser","uid","lobbyType","lobbyOpen","participants","numParticipants","init","bind","handleLogout","chatListener","getChatID","addAllListeners","then","lobbyID","initTime","ref","videoCallURL","handleLobbyStatusChange","prevProps","prevState","collection","doc","get","user","chat_id","setState","lobby_open","lobby_type","onSnapshot","exists","num_participants","orderBy","querySnapshot","forEach","user_id","reload","reloadIfLeft","changeLobbyStatus","presenceRef","onDisconnect","set","on","snapshot","val","refs","videoFrame","disconnect","signOut","userId","chatId","result","catch","HeaderFrame","AppBar","position","getLobbyButtonMessage","LobbyFrame","showLobbyID","showLobbyCapacity","showParticipants","menuOpen","anchorEl","handleLobbyCapacityClick","handleLobbyIDClick","handleParticipantsClick","misc","lobbyFrameButton","lobbyIDText","simpleMenu","lobbyCapacityText","makeParticipants","text","clickHandler","marginLeft","marginRight","outline","boxShadow","handleClose","Fragment","event","currentTarget","Menu","keepMounted","getContentAnchorEl","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","key","push","MenuItem","ChatFrame","numMessagesSent","numMessagesReceived","messages","lastMessageTime","Math","floor","getTime","messageHelperText","handleSendMessage","sendMessage","makeMessageBubble","getMessages","sendMessageBox","scrollDiv","scrollIntoView","behavior","makeMessages","messageID","messageData","messageClass","timeFormatted","date","toTimeString","substr","hour","getFormattedTime","timestamp","seconds","content","makeUserMessage","makeStatusMessage","onSubmit","limit","preventDefault","inputForm","message","send","messageNumber","verified","VideoFrame","callFrame","joinCall","makeCallFrame","joinButton","addDisconnectListener","addListeners","join","url","cssYesVideo","iframeStyle","left","top","showLeaveButton","showFullscreenButton","userName","DailyIframe","createFrame","destroy","cssNoVideo","leave","chatFrame","Loading","ReactDOM","render","signInAnonymously","renderPageWithUserID","userInfo","onAuthStateChanged","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.47be052d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pig_logo.d0d99a55.png\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export const firebase = require('firebase');\r\nconst config = {\r\n    apiKey: \"AIzaSyBriNz3DFDo1ra0CmHC0_ZpoCYnonSWOoo\",\r\n    authDomain: \"bork-cc.firebaseapp.com\",\r\n    projectId: \"bork-cc\",\r\n    databaseURL: \"https://bork-cc.firebaseio.com\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nfirebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL)\r\nexport const auth = firebase.auth();\r\nexport const db = firebase.firestore();\r\nexport const rt_db = firebase.database()\r\nexport const functions = firebase.functions()\r\n// firebase.database();","import React, { Component } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport './Login.css';\r\nimport Logo from './../pig_logo/pig_logo.png';\r\n\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"full-frame-login\">\r\n        {this.loginFrame()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  loginFrame() {\r\n    return (\r\n      <div class=\"login-frame\">\r\n        <Form {...this.props}></Form>\r\n        <HogPub></HogPub>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"form-frame\">\r\n        {this.description()}\r\n        <FormGrid {...this.props}></FormGrid>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  description() {\r\n    return (\r\n      <div class=\"descriptions\">\r\n        <h2 class=\"main-description\">\r\n          Enter Among Us Lobbies!\r\n        </h2>\r\n        <h3 class=\"sub-description\">\r\n          <p id=\"username-warning\"></p>\r\n        </h3>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nclass FormGrid extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.styles = importStyles();\r\n  }\r\n\r\n  render() {\r\n    return this.formGrid();\r\n  }\r\n\r\n  \r\n\r\n  formGrid() {\r\n    return (\r\n      <Grid container class=\"container\">\r\n          <TextField class=\"username-textfield\" id=\"username-textfield\" variant=\"outlined\" error={this.props.usernameError}\r\n          label=\"Username\" helperText={this.props.usernameHelperText} fullWidth={true} autoComplete=\"off\"\r\n          InputLabelProps={{style: {fontSize: 25}}}\r\n          InputProps={{style: {height: 65, fontSize: 25}}}\r\n          inputProps={{style: {fontSize: 40, textAlign: \"center\"}}}>\r\n          </TextField>\r\n\r\n          <Button className=\"solo-queue-button\" id=\"solo-queue-button\" variant=\"contained\" color=\"primary\" size=\"large\" fullWidth={true}\r\n           style={this.styles.soloStyle} >Join Random Lobby</Button>\r\n\r\n          <Grid item class=\"buttons\">\r\n            {this.createLobbyButtonSet()}\r\n            {this.joinLobbyButtonSet()}\r\n          </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n\r\n  createLobbyButtonSet() {\r\n    return (\r\n      <div id=\"create-lobby-box\" onMouseEnter={this.displayChange(\"create-invis\", \"create-show\")} onMouseLeave={this.displayChange(\"create-show\", \"create-invis\")} >\r\n        <Button id=\"create-lobby-button\" variant=\"outlined\" color=\"primary\" size=\"large\" fullWidth={true} style={this.styles.createStyle}>Create Lobby</Button>\r\n        {this.createLobbyDropdown()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  joinLobbyButtonSet() {\r\n    return (\r\n      <div id=\"join-lobby-box\"\r\n       onMouseEnter={this.displayChange(\"join-invis\", \"join-show\")} onMouseLeave={this.displayChange(\"join-show\", \"join-invis\")} >\r\n          <Button id=\"join-lobby-button\" variant=\"outlined\" color=\"primary\" size=\"large\" fullWidth={true} style={this.styles.joinStyle} >Join Lobby</Button>\r\n          {this.joinLobbyDropdown()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  createLobbyDropdown() {\r\n    return (\r\n      <div class=\"create-lobby-div\" id={this.props.createLobbyError ? \"create-show\" : \"create-invis\"}>\r\n        <TextField className=\"create-lobby-input\" hidden={true} id=\"create-lobby-input\" variant=\"outlined\" type=\"text\" autoComplete=\"off\"\r\n          label=\"Enter Lobby ID\" error={this.props.createLobbyError} helperText={this.props.createLobbyHelperText} \r\n          InputProps={{style: this.styles.textFieldStyle}} >\r\n         </TextField>\r\n        <Button id=\"create-input-button\" variant=\"contained\" color=\"primary\" style={this.styles.buttonStyle}>\r\n          <p class=\"create-input-text\">Create!</p>\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  joinLobbyDropdown() {\r\n    return (\r\n      <div class=\"join-lobby-div\" id={this.props.joinLobbyError ? \"join-show\" : \"join-invis\"}>\r\n        <TextField className=\"join-lobby-input\" hidden={true} id=\"join-lobby-input\" variant=\"outlined\" type=\"text\" autoComplete=\"off\"\r\n          label=\"Enter Lobby ID\" error={this.props.joinLobbyError} helperText={this.props.joinLobbyHelperText} \r\n          InputProps={{style: this.styles.textFieldStyle}} >\r\n         </TextField>\r\n        <Button id=\"join-input-button\" variant=\"contained\" color=\"primary\" style={this.styles.buttonStyle}>\r\n          <p class=\"join-input-text\">Join!</p>\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  displayChange(idFrom, idTo) {\r\n    function helper() {\r\n      const div = document.getElementById(idFrom);\r\n      /* If someone is already hovering on the button when a re-render occurs, the idFrom will be opposite. Just do nothing in this case */\r\n      if (div === null) {\r\n        return;\r\n      }\r\n      div.setAttribute(\"id\", idTo);\r\n    }\r\n    return helper\r\n  }\r\n}\r\n\r\nclass HogPub extends Component {\r\n  render() {\r\n    return (\r\n      <div class=\"hog-pub-frame\">\r\n        {this.hogPubHeader()}\r\n        {this.comingSoon()}\r\n        {this.logo()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  hogPubHeader() {\r\n    return (\r\n      <h1 class=\"header\">Hog Pub</h1>\r\n    )\r\n  }\r\n\r\n  comingSoon() {\r\n    return (\r\n      <h3 class=\"coming-soon\">Other games coming soon!</h3>\r\n    );\r\n  }\r\n\r\n  logo() {\r\n    return (\r\n      <img class=\"logo\" src={Logo} alt=\"logo\"/>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nfunction importStyles() {\r\n  return {\r\n    soloStyle: {\r\n      fontSize: 20,\r\n\r\n      background: 'linear-gradient(45deg, #2196F3 5%, #21CBF3 90%)',\r\n      color: 'white',\r\n    },\r\n\r\n    createStyle: {\r\n      height: '100%',\r\n      width: '100%',\r\n\r\n      borderWidth: 1.2,\r\n      borderColor: '#21CBF3',\r\n      \r\n      fontSize: 20,\r\n\r\n      color: '#21CBF3',\r\n    },\r\n\r\n    joinStyle: {\r\n      height: '100%',\r\n      width: '100%',\r\n\r\n      borderWidth: 1.2,\r\n      borderColor: '#21CBF3',\r\n      \r\n      fontSize: 20,\r\n\r\n      color: '#21CBF3',\r\n    },\r\n\r\n    textFieldStyle: {\r\n      borderTopRightRadius: '0px',\r\n      borderBottomRightRadius: '0px',\r\n      borderTopLeftRadius: '20px',\r\n      borderBottomLeftRadius: '20px',\r\n    },\r\n\r\n    buttonStyle: {\r\n      height: '96%',\r\n      width: '30%',\r\n\r\n      borderTopRightRadius: '20px',\r\n      borderBottomRightRadius: '20px',\r\n      borderTopLeftRadius: '0px',\r\n      borderBottomLeftRadius: '0px',\r\n\r\n      background: '#21CBF3',\r\n      color: 'white',\r\n    },\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { renderLogin, renderChat, renderLoading } from './../index';\r\n\r\nimport { auth, functions } from '../services/firebase';\r\n\r\nfunction loginButtonTransition() {\r\n    const sqb = document.getElementById('solo-queue-button');\r\n    transition(sqb, \"soloQueue\");\r\n}\r\n\r\nfunction joinLobbyTransition() {\r\n    const jlb = document.getElementById(\"join-lobby-button\");\r\n    const jdb = document.getElementById(\"join-input-button\");\r\n    transition(jlb, \"joinLobby\");\r\n    transition(jdb, \"joinLobby\");\r\n}\r\n\r\nfunction createLobbyTransition() {\r\n    const clb = document.getElementById(\"create-lobby-button\");\r\n    const cdb = document.getElementById(\"create-input-button\");\r\n    transition(clb, \"createLobby\");\r\n    transition(cdb, \"createLobby\");\r\n}\r\n\r\nfunction removeLoginButtonTransition() {\r\n    const sqb = document.getElementById('solo-queue-button');\r\n    sqb.parentNode.replaceChild(sqb.cloneNode(true), sqb);\r\n}\r\n\r\nfunction removeJoinLobbyTransition() {\r\n    const jlb = document.getElementById(\"join-lobby-button\");\r\n    const jdb = document.getElementById(\"join-input-button\");\r\n    jlb.parentNode.replaceChild(jlb.cloneNode(true), jlb);\r\n    jdb.parentNode.replaceChild(jdb.cloneNode(true), jdb);\r\n}\r\n\r\nfunction removeCreateLobbyTransition() {\r\n    const clb = document.getElementById(\"create-lobby-button\");\r\n    const cdb = document.getElementById(\"create-input-button\");\r\n    clb.parentNode.replaceChild(clb.cloneNode(true), clb);\r\n    cdb.parentNode.replaceChild(cdb.cloneNode(true), cdb);\r\n}\r\n\r\nexport function setTransitions() {\r\n    loginButtonTransition();\r\n    joinLobbyTransition();\r\n    createLobbyTransition();\r\n}\r\n\r\nexport function removeTransitions() {\r\n    removeLoginButtonTransition();\r\n    removeJoinLobbyTransition();\r\n    removeCreateLobbyTransition();\r\n}\r\n\r\n/**\r\n * Retrive username, inputted chatID from input boxes in the login page.\r\n * \r\n * Call server's sign in function.\r\n * \r\n * If it works, render the chat page.\r\n * If it doesn't re-render the login page with the correct error message\r\n * \r\n * @param {html button} button \r\n * @param {string} signInType \r\n * @returns {null}\r\n * \r\n */\r\nfunction transition(button, signInType) {\r\n    button.addEventListener('click', onClick(signInType));\r\n}\r\n\r\nfunction onClick(signInType) {\r\n    async function handleClick() {\r\n        const username_box = document.getElementById(\"username-textfield\");\r\n        const username = username_box.value;\r\n        const inputChatID = getInputChatID(signInType);\r\n    \r\n        renderLoading();\r\n\r\n        const signIn = functions.httpsCallable('signIn');\r\n        const obj = await signIn({username: username, chatID: inputChatID, signInType: signInType});\r\n    \r\n        const data = obj.data;\r\n        console.log(data);\r\n        if (data.usernameError || data.createLobbyError || data.joinLobbyError || data.signInError) {\r\n            renderLogin(data.usernameError, data.usernameErrorMessage, data.createLobbyError, data.createLobbyErrorMessage, data.joinLobbyError, data.joinLobbyErrorMessage);\r\n            removeTransitions();\r\n            setTransitions();\r\n        } else {\r\n            renderChat(data.chatID, data.username);\r\n        }\r\n    }\r\n    return throttle(handleClick, 2000);\r\n}\r\n\r\nexport function throttle(func, timeFrame) {\r\n    var lastTime = 0;\r\n    return function () {\r\n        var now = new Date();\r\n        if (now - lastTime >= timeFrame) {\r\n            func();\r\n            lastTime = now;\r\n        } else {\r\n            console.log(\"waiting\");\r\n        }\r\n    };\r\n  }\r\n\r\n/**\r\n * Retrieves the user-inputted chatID from the input boxes, given their signInType.\r\n * \r\n * @param {string} signInType \r\n * @returns {string} chatID\r\n * \r\n */\r\nfunction getInputChatID(signInType) {\r\n    const joinLobbyInput = document.getElementById(\"join-lobby-input\");\r\n    const createLobbyInput = document.getElementById(\"create-lobby-input\");\r\n    if (signInType === \"joinLobby\") {\r\n        return joinLobbyInput.value;\r\n    } else if (signInType === \"createLobby\") {\r\n        return createLobbyInput.value;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport DailyIframe from '@daily-co/daily-js';\r\n\r\nimport { TextField, Button, AppBar, Menu, MenuItem } from '@material-ui/core';\r\n\r\nimport { auth, db, functions, rt_db } from '../services/firebase';\r\n\r\nimport './Chat.css';\r\nimport { throttle } from './LoginFirebase';\r\nimport { renderLoading } from './../index';\r\n\r\n\r\nexport default class LobbyApp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chatID: null,\r\n            userID: auth.currentUser.uid,\r\n            \r\n            lobbyType: null,\r\n            lobbyOpen: null,\r\n\r\n            participants: {},\r\n            numParticipants: 0,\r\n        };\r\n\r\n        this.init = this.init.bind(this);\r\n        this.handleLogout = this.handleLogout.bind(this);\r\n    \r\n        this.chatListener = this.chatListener.bind(this);\r\n        this.getChatID = this.getChatID.bind(this);\r\n        this.addAllListeners = this.addAllListeners.bind(this);\r\n        this.setPersistence = this.setPersistence.bind(this);\r\n        \r\n        this.init().then(() => {\r\n            this.addAllListeners();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        /* If the chat is still being created, do not render anything!! */\r\n        if (this.state.chatID === null) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div class=\"page\">\r\n                    <div class=\"full-frame-chat\">\r\n                        <LobbyFrame lobbyID={this.state.chatID} lobbyType={this.state.lobbyType} lobbyOpen={this.state.lobbyOpen}\r\n                        numParticipants={this.state.numParticipants} participants={this.state.participants}/>\r\n\r\n                        <ChatFrame chatID={this.state.chatID} userID={this.state.userID} username={this.props.username} initTime={new Date()}/>\r\n\r\n                        <VideoFrame ref=\"videoFrame\" videoCallURL={`https://hogpub.daily.co/${this.state.chatID}`} username={this.props.username} />\r\n                    </div>\r\n\r\n                    <HeaderFrame handleLogout={throttle(this.handleLogout, 10000)} handleLobbyStatusChange={this.handleLobbyStatusChange}\r\n                     lobbyType={this.state.lobbyType} lobbyOpen={this.state.lobbyOpen}></HeaderFrame>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /** \r\n     * Redirect listeners after chatID has changed \r\n     */\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.chatID !== this.state.chatID) {\r\n            this.addAllListeners();\r\n        }\r\n    }\r\n\r\n    addAllListeners() {\r\n        this.getChatID();\r\n        this.chatListener();\r\n    }\r\n\r\n    /**\r\n     * Assign this chat its correct chatID, lobbyOpen, and lobbyType\r\n     */\r\n    async init() {\r\n        await db.collection(\"users\").doc(this.state.userID).get().then(async user => {\r\n            const chatID = user.data().chat_id;\r\n            await db.collection(\"chats\").doc(chatID).get().then(doc => {\r\n                this.setState({\r\n                    chatID: chatID,\r\n                    lobbyOpen: doc.data().lobby_open,\r\n                    lobbyType: doc.data().lobby_type,\r\n                });\r\n            });\r\n        });\r\n        this.setPersistence();\r\n    }\r\n\r\n    getChatID() {\r\n        const ref = db.collection(\"users\").doc(this.state.userID);\r\n        ref.onSnapshot(doc => {\r\n            if (!doc.exists) {\r\n                return null;\r\n            }\r\n            const chatID = doc.data().chat_id; \r\n            this.setState({\r\n                chatID: chatID,\r\n            });\r\n        });\r\n    }\r\n\r\n    chatListener() {\r\n        const reloadIfLeft = (participants) => {\r\n            if (!(this.state.userID in participants)) {\r\n                window.location.reload();\r\n            }\r\n        }\r\n\r\n        const ref = db.collection(\"chats\").doc(this.state.chatID)\r\n        ref.onSnapshot(doc => {\r\n            if (!doc.exists) {\r\n                return null;\r\n            }\r\n            const numParticipants = doc.data().num_participants;\r\n            const lobbyOpen = doc.data().lobby_open;\r\n            const lobbyType = doc.data().lobby_type;\r\n\r\n            ref.collection(\"participants\").orderBy(\"timestamp\").get().then(querySnapshot => {\r\n                var participants = {}\r\n                querySnapshot.forEach(doc => {\r\n                    participants[doc.data().user_id] = doc.data().username;\r\n                });\r\n\r\n                reloadIfLeft(participants);\r\n\r\n                this.setState({\r\n                    participants: participants,\r\n                    numParticipants: numParticipants,\r\n                    lobbyOpen: lobbyOpen,\r\n                    lobbyType: lobbyType,\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    handleLobbyStatusChange() {\r\n        const changeLobbyStatus = functions.httpsCallable('changeLobbyStatus')\r\n        const status = changeLobbyStatus({});\r\n    }\r\n\r\n    setPersistence() {\r\n        var presenceRef = rt_db.ref(\"users/\" + this.state.userID + \"/is_disconnected\");\r\n        console.log(\"set persistence: \", this.state.userID);\r\n        presenceRef.onDisconnect().set(true).then(() => {\r\n          console.log(\"set to disconnected:\", this.state.userID);\r\n        });\r\n      \r\n        presenceRef.on(\"value\", (snapshot) => {\r\n          console.log(\"inside the weird function\");\r\n          if (snapshot.val()) {\r\n            console.log(\"set to connected:\", this.state.userID);\r\n            presenceRef.set(false); \r\n          }\r\n        });\r\n      }\r\n\r\n    // this deletes from local participants, need to delete from DATABASE\r\n    async handleLogout() {\r\n        // disconnect from the video call using the VideoFrame class's method\r\n        if (this.refs.videoFrame || null !== null) {\r\n            this.refs.videoFrame.disconnect();\r\n        } \r\n        renderLoading();\r\n        const signOut = functions.httpsCallable('signOut');\r\n        \r\n        await signOut({userId: this.state.userID, chatId: this.state.chatID, username: this.props.username}).then(result => { // CORS error that wasn't there earlier\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n        auth.signOut()\r\n    }\r\n\r\n}\r\n\r\nclass HeaderFrame extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const lightBlue = {\r\n            background: '#2196F3',\r\n            color: 'white',\r\n        };\r\n\r\n        const darkBlue = {\r\n            height: '80%',\r\n            color: 'white',\r\n        };\r\n        \r\n        return (\r\n            <AppBar className=\"appbar\" position=\"sticky\">\r\n                <div className=\"toolbar\">\r\n                        <Button className=\"leave-lobby-temp\" variant=\"contained\" color=\"secondary\"\r\n                         onClick={this.props.handleLogout}>Leave Lobby</Button>\r\n                        <Button className=\"start-queue-temp\" variant=\"contained\" color=\"primary\" style={lightBlue}\r\n                         onClick={this.props.handleLobbyStatusChange}>{this.getLobbyButtonMessage()}</Button>\r\n                        <Button className=\"hog-pub-header-temp\" variant=\"outlined\" color=\"primary\" style={darkBlue}><h1>The Pub</h1></Button>\r\n                </div>\r\n            </AppBar>\r\n        );\r\n    }\r\n\r\n    getLobbyButtonMessage() {\r\n        if (this.props.lobbyType === \"Premade\") {\r\n            return this.props.lobbyOpen ? \"Loading...\" : \"Find More Players\";\r\n        } else {\r\n            return this.props.lobbyOpen ? \"Close Lobby\" : \"Find More Players\";\r\n        }\r\n    }\r\n}\r\n\r\nclass LobbyFrame extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showLobbyID: false,\r\n            showLobbyCapacity: false,\r\n            showParticipants: false,\r\n            menuOpen: false,\r\n            anchorEl: null,\r\n        };\r\n\r\n        this.handleLobbyCapacityClick = this.handleLobbyCapacityClick.bind(this);\r\n        this.handleLobbyIDClick = this.handleLobbyIDClick.bind(this);\r\n        this.handleParticipantsClick = this.handleParticipantsClick.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"lobby-frame\">\r\n                {this.misc()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    misc() {\r\n        return (\r\n            <div class=\"misc-box\">\r\n                {this.lobbyFrameButton(this.lobbyIDText(), this.handleLobbyIDClick)}\r\n                {this.simpleMenu()}\r\n                {this.lobbyFrameButton(this.lobbyCapacityText(), this.handleLobbyCapacityClick)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleLobbyIDClick() {\r\n        this.setState({\r\n            showLobbyID: !this.state.showLobbyID,\r\n        });\r\n    }\r\n\r\n    handleLobbyCapacityClick() {\r\n        this.setState({\r\n            showLobbyCapacity: !this.state.showLobbyCapacity,\r\n        });\r\n    }\r\n\r\n    handleParticipantsClick() {\r\n        this.setState({\r\n            showParticipants: !this.state.showParticipants,\r\n        })\r\n    }\r\n\r\n    lobbyIDText() {\r\n        return this.state.showLobbyID ? this.props.lobbyID : \"Show Lobby ID\";\r\n    }\r\n\r\n    lobbyCapacityText() {\r\n        return this.state.showLobbyCapacity ? this.props.numParticipants + \"/10\" : \"Show Lobby Capacity\";\r\n    }\r\n\r\n    participantsText() {\r\n        return this.state.showParticipants ? this.makeParticipants() : \"Show Participants\";\r\n    }\r\n\r\n    lobbyFrameButton(text, clickHandler, id) {\r\n        const style = {\r\n            height: '5%',\r\n            width: '85%',\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n    \r\n            outline: 'none',\r\n            color: 'black',\r\n            borderColor: 'black',\r\n            boxShadow: '2px 2px 5px -3px black',\r\n        }\r\n\r\n        return (\r\n            <Button className=\"lobby-frame-button\" id={id} variant=\"outlined\" onClick={clickHandler} style={style}>{text}</Button>\r\n        );\r\n    }\r\n\r\n    simpleMenu() {\r\n        const handleClick = (event) => {\r\n            this.setState({\r\n                menuOpen: !this.state.menuOpen,\r\n                anchorEl: event.currentTarget,\r\n            })\r\n        }\r\n\r\n        const handleClose = () => {\r\n            this.setState({\r\n                menuOpen: false,\r\n            })\r\n        }\r\n\r\n        const makeParticipants = () => {\r\n            var participants = []\r\n            for (var key in this.props.participants) {\r\n                participants.push(<MenuItem onClick={handleClose}>{this.props.participants[key]}</MenuItem>)\r\n            }\r\n            return participants;\r\n        }\r\n      \r\n        return (\r\n            <React.Fragment>\r\n                {this.lobbyFrameButton(\"Show Participants\", handleClick, \"participants\")}\r\n                <Menu keepMounted anchorEl={this.state.anchorEl} getContentAnchorEl={null} open={this.state.menuOpen} onClose={handleClose} \r\n                 anchorOrigin={{vertical: 'bottom', horizontal: 'center'}} transformOrigin={{vertical: 'top', horizontal: 'center'}}> \r\n                    {makeParticipants()}\r\n                </Menu>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nclass ChatFrame extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            numMessagesSent: 0,\r\n            numMessagesReceived: 0,\r\n            messages: {},\r\n            lastMessageTime: Math.floor(this.props.initTime.getTime() / 1000),\r\n            messageHelperText: \"\",\r\n        }\r\n\r\n        this.handleSendMessage = this.handleSendMessage.bind(this);\r\n        this.sendMessage = this.sendMessage.bind(this);\r\n        this.makeMessageBubble = this.makeMessageBubble.bind(this);\r\n\r\n        this.getMessages = this.getMessages.bind(this);\r\n        this.addAllListeners = this.addAllListeners.bind(this);\r\n\r\n        this.addAllListeners();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"chat-frame-no-video\" id=\"chat-frame\">\r\n                {this.messages()}\r\n                {this.sendMessageBox()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        /* Auto scroll down */\r\n        const scrollDiv = document.getElementById(\"dummyScroll\");\r\n        if (scrollDiv != null) {\r\n            scrollDiv.scrollIntoView(true, { behavior: \"smooth\" });\r\n        }\r\n\r\n        /* Redirect listeners after chatID has changed */\r\n        if (prevProps.chatID !== this.props.chatID) {\r\n            this.addAllListeners();\r\n        }\r\n    }\r\n\r\n    addAllListeners() {\r\n        this.getMessages();\r\n    }\r\n\r\n    messages() {\r\n        return (\r\n            <div class=\"messages-frame\">\r\n                {this.makeMessages()}\r\n                <div id=\"dummyScroll\"></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    makeMessages() {\r\n        var messages = [];\r\n        for (var key in this.state.messages) {\r\n            messages.push(this.makeMessageBubble(key))\r\n        }\r\n        return messages;\r\n    }\r\n\r\n    makeMessageBubble(messageID) {\r\n        function getFormattedTime(date) {\r\n            var timeFormatted = date.toTimeString().substr(0,5);\r\n            const hour = timeFormatted.substr(0, 2);\r\n            if (hour == 0) {\r\n                timeFormatted = \"12\" + timeFormatted.substr(2) + \" am\";\r\n            } else if (hour <= 12) { // need to change 00:01 am to 12:01 am\r\n                timeFormatted += \" am\";\r\n            } else {\r\n                timeFormatted = timeFormatted.substr(0, 2) % 12 + timeFormatted.substr(2, 5) + \" pm\";\r\n            }\r\n            return timeFormatted\r\n        }\r\n\r\n        function makeUserMessage(messageData, userID) {\r\n            const messageClass = (messageData.userID == userID) ? \"user-message\" : \"other-message\";\r\n            var date = new Date(messageData.timestamp.seconds * 1000);\r\n            var timeFormatted = getFormattedTime(date);\r\n            return (\r\n                <div class={messageClass}>\r\n                    <div class=\"message-bubble\">\r\n                        <div class=\"message-metadata\">\r\n                            <div class=\"message-username\">{messageData.username}</div>\r\n                            <div class=\"message-timestamp\">{timeFormatted}</div>\r\n                        </div>\r\n                        <div class=\"message-content\">\r\n                            {messageData.content}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        function makeStatusMessage(messageData, userID) {\r\n            return (\r\n                <div class=\"status-msg\">\r\n                    {messageData.content}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const messageData = this.state.messages[messageID];\r\n        if (messageData.type == \"user_content\") {\r\n            return makeUserMessage(messageData, this.props.userID);\r\n        } else {\r\n            return makeStatusMessage(messageData, this.props.userID);\r\n        }\r\n    }\r\n\r\n    sendMessageBox() {\r\n        return (\r\n            <form class=\"send-message-form\" onSubmit={this.handleSendMessage}>\r\n                <TextField className=\"send-message-input\" id=\"message-input\" variant=\"outlined\"\r\n                 label=\"Enter a message\" error={this.state.messageHelperText} helperText={this.state.messageHelperText} fullWidth={true} autoComplete=\"off\"></TextField>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    getMessages() {\r\n        const ref = db.collection(\"chats\").doc(this.props.chatID).collection(\"messages\").orderBy(\"timestamp\", \"desc\").limit(1);\r\n        const unsubscribe = ref.onSnapshot(collection => {\r\n            collection.forEach(doc => {\r\n                const data = doc.data();\r\n                    this.setState({\r\n                        messages: {\r\n                            ...this.state.messages,\r\n                            [this.state.numMessagesReceived + 1]: data,\r\n                        },\r\n                        numMessagesReceived: this.state.numMessagesReceived + 1,\r\n                        lastMessageTime: data.timestamp.seconds,\r\n                    });\r\n            });\r\n        });\r\n    }\r\n\r\n    handleSendMessage(event) {\r\n        event.preventDefault();\r\n        const inputForm = document.getElementById(\"message-input\");\r\n        const message = inputForm.value;\r\n        inputForm.value = \"\";\r\n        if (message != \"\") {\r\n            this.setState({\r\n                numMessagesSent: this.state.numMessagesSent + 1,\r\n            });\r\n            this.sendMessage(message);\r\n        }\r\n    }\r\n\r\n    sendMessage(message) {\r\n        const send = functions.httpsCallable('sendMessage');\r\n        const success = send({message: message, messageNumber: this.state.numMessagesSent}).then(result => {\r\n            this.setState({\r\n                messageHelperText: result.data.verified ? \"\" : result.data.message,\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nclass VideoFrame extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            callFrame: null,\r\n        };\r\n\r\n        this.joinCall = this.joinCall.bind(this);\r\n        this.makeCallFrame = this.makeCallFrame.bind(this);\r\n        this.joinButton = this.joinButton.bind(this);\r\n\r\n        this.addDisconnectListener = this.addDisconnectListener.bind(this);\r\n        this.addListeners = this.addListeners.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"video-frame-no-video\" id=\"video-frame\">\r\n                {this.joinButton()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.videoCallURL !== this.props.videoCallURL) {\r\n            this.disconnect();\r\n        }\r\n    }\r\n\r\n    joinButton() {\r\n        const style = {\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n          };\r\n\r\n        return (\r\n            <Button className=\"join-video-button\" id=\"join-video-button\" variant=\"contained\" color=\"primary\" style={style} onClick={this.joinCall}>\r\n                <p class=\"join-video-text\">Join Voice and Video!</p>\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    joinCall() {\r\n        this.makeCallFrame();\r\n\r\n        this.state.callFrame.join({url: this.props.videoCallURL});\r\n\r\n        this.addListeners();\r\n        this.cssYesVideo();\r\n    }\r\n\r\n    makeCallFrame() {\r\n        const style = {\r\n            iframeStyle: {\r\n                position: \"fixed\",\r\n                left: \"16%\",\r\n                top: \"8%\",\r\n                width: \"48%\",\r\n                height: \"90%\",\r\n            },\r\n            showLeaveButton: true,\r\n            showFullscreenButton: true,\r\n            userName: this.props.username,\r\n        };\r\n        const callFrame = DailyIframe.createFrame(style);\r\n        this.state.callFrame = callFrame;\r\n    }\r\n\r\n    addListeners() {\r\n        this.addDisconnectListener();\r\n    }\r\n\r\n    addDisconnectListener() {\r\n        this.state.callFrame.on(\"left-meeting\", (event) => {\r\n            this.state.callFrame.destroy();\r\n            this.cssNoVideo();\r\n        })\r\n    }\r\n\r\n    disconnect() {\r\n        if (this.state.callFrame !== null) {\r\n            this.state.callFrame.leave();\r\n        }\r\n    }\r\n\r\n    cssYesVideo() {\r\n        const chatFrame = document.getElementById(\"chat-frame\");\r\n        const videoFrame = document.getElementById(\"video-frame\");\r\n        chatFrame.setAttribute(\"class\", \"chat-frame-yes-video\");\r\n        videoFrame.setAttribute(\"class\", \"video-frame-yes-video\");\r\n    }\r\n\r\n    cssNoVideo() {\r\n        const chatFrame = document.getElementById(\"chat-frame\");\r\n        const videoFrame = document.getElementById(\"video-frame\");\r\n        chatFrame.setAttribute(\"class\", \"chat-frame-no-video\");\r\n        videoFrame.setAttribute(\"class\", \"video-frame-no-video\");\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Circle from '@material-ui/core/CircularProgress';\r\n\r\nimport './Loading.css';\r\n\r\nexport default class Loading extends Component {\r\n    render() {\r\n        return (\r\n            <div class=\"full-frame-loading\">\r\n                <h1 class=\"hog-pub-text\">Hog Pub</h1>\r\n                <h2 class=\"loading-text\">Loading...</h2>\r\n                <Circle size={100} className=\"loading\"></Circle>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {firebase, db, rt_db, auth} from './services/firebase';\r\n\r\nimport './index.css';\r\nimport App from './pages/Login';\r\nimport LobbyApp from './pages/Chat';\r\nimport Loading from './pages/Loading';\r\nimport { setTransitions, removeTransitions } from './pages/LoginFirebase';\r\n\r\n\r\n\r\nexport function renderLogin(usernameError, usernameErrorMessage, createLobbyError, createLobbyErrorMessage, joinLobbyError, joinLobbyErrorMessage) {\r\n  ReactDOM.render(<App usernameError={usernameError} usernameHelperText={usernameErrorMessage}\r\n    createLobbyError={createLobbyError} createLobbyHelperText={createLobbyErrorMessage}\r\n    joinLobbyError={joinLobbyError} joinLobbyHelperText={joinLobbyErrorMessage}\r\n  />, document.getElementById('root'));\r\n\r\n  auth.setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(function () {\r\n    return auth.signInAnonymously();\r\n  });\r\n}\r\n\r\nexport async function renderPageWithUserID(userId) {\r\n  const userInfo = db.collection('users').doc(userId);\r\n  var chatID = \"\"\r\n  var username = \"\"\r\n  await userInfo.get().then(function(doc) {\r\n    if(doc.exists) {\r\n      chatID = doc.data().chat_id\r\n      username = doc.data().username\r\n    }\r\n  })\r\n  .catch(function(error) {\r\n    console.error(\"broke here \", error)\r\n  })\r\n\r\n  if(chatID !== \"\") {\r\n    renderChat(chatID, username);\r\n  }\r\n  else {\r\n    renderLogin();\r\n    removeTransitions();\r\n    setTransitions();\r\n  }\r\n}\r\n\r\nexport function renderChat(chatID, username) {\r\n  ReactDOM.render(<LobbyApp chatID={chatID} username={username}/>, document.getElementById('root'));\r\n}\r\n\r\nexport function renderLoading() {\r\n  ReactDOM.render(<Loading />, document.getElementById(\"root\"));\r\n}\r\n\r\n\r\nauth.onAuthStateChanged(function(user) {\r\n  if(user !== null) {\r\n    renderPageWithUserID(user.uid)\r\n  }\r\n  else {\r\n    renderLogin();\r\n    removeTransitions();\r\n    setTransitions();\r\n  }\r\n});\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}